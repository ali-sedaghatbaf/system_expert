[{"title":"Adversarial machine learning","type":"technique","description":"\n<p>As per <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Adversarial_machine_learning\" rel=\"nofollow\">Wikipedia</a>, adversarial machine learning can be defined as a machine learning technique that attempts to fool models by supplying deceptive input. In the context of automotive cybersecurity, the adversary could try to use adversarial machine learning techniques to cause vehicle perception systems to misclassify objects, fail to detect obstacles, misinterpret road signs, respond inappropriately to road conditions, and others.</p><p>For example, it may be possible to create an image that appears as a stop sign to a human but is interpreted by a vehicle’s vision system as a speed limit sign.</p><p>It has been shown that some adversarial machine learning techniques could be used to attack multi-sensor fusion systems and possibly affect the behavior of driver assist or autonomous driving features.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.117Z","mitreId":"T0005","technique":[],"updatedAt":"2023-08-09T13:56:07.819Z","id":"ATM-T0005"},{"title":"Downgrade to insecure protocols","type":"technique","description":"\n<p>An adversary could cause the vehicle’s wireless interfaces to use less secure protocols, for example by jamming frequencies used by newer protocols such as LTE and only allowing older protocols such as GSM to communicate. Use of less secure protocols may make communication easier to eavesdrop upon or manipulate.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1466/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.136Z","mitreId":"T0001","technique":[],"updatedAt":"2023-08-09T13:56:07.844Z","id":"ATM-T0001"},{"title":"Access personal information","type":"technique","description":"\n<p>An adversary could attempt to access the vehicle occupants' personal information. This could include calendar entries, call logs, contact lists, media playlists, or notifications (including SMS messages, emails, etc.).</p><p>An adversary could also attempt to access occupants' personal data via an ECU’s application data for apps such as Facebook or Gmail.</p><p>The specific methods for accessing this information can vary from ECU to ECU, but generally include the use of the standard operating system APIs, or by directly accessing application files. Some of these approaches may require elevated privileges.</p><p>This technique’s description was adapted from 5 techniques from the MITRE ATT&amp;CK for Mobile Matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1435/\" rel=\"nofollow\">Access Calendar Entries</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1433/\" rel=\"nofollow\">Access Call Log</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1432/\" rel=\"nofollow\">Access Contact List</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1517/\" rel=\"nofollow\">Access Notifications</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.134Z","mitreId":"T0056","technique":[],"updatedAt":"2023-08-09T13:56:07.837Z","id":"ATM-T0056"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","technique":[],"updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","technique":[],"updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"},{"title":"System information discovery","type":"technique","description":"\n<p>An adversary may attempt to get detailed information about the ECU’s operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1082/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.161Z","mitreId":"T0047","technique":[],"updatedAt":"2023-08-09T13:56:07.916Z","id":"ATM-T0047"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"The security researchers defeated UDS security access on the gateway ECU by breaking its weak cryptography.","mitreId":"T0033","technique":[{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"}],"updatedAt":"2023-08-11T08:13:51.675Z","id":"ATM-T0033"},{"title":"Losing the Car Keys: Wireless PHY-Layer Insecurity in EV Charging","type":"procedure","description":"The charging cable from the Combined Charging System effectively acted as an antenna broadcasting powerline communications between the CCS and the automobile. Nearby wireless receivers collecting HF wavelengths were able to pick up said communications.","mitreId":"T0065","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"updatedAt":"2023-08-11T08:13:52.457Z","id":"ATM-T0065"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Security researchers indicate that they can gain initial access to an ECU by modifying software on a removable SD card: “We can pull the SD card out and directly write our boot.img in it. Since bootloader does not verify if the image is correct, the gateway would execute it directly”.","mitreId":" ","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"}],"updatedAt":"2023-08-11T08:13:52.489Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers found in the firmware the password file containing encrypted user credentials and cracked the weak passwords. An account had root access.","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:53.010Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to cause a Ford Escape's dashboard to display \"Driver Door is Ajar\" message even when it is closed by capturing the door signal packet and replay it using the EcomCat software","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:06:32.393Z","updatedAt":"2023-12-07T16:06:32.393Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to replay CAN packets to the speedometer of Toyota Prius and spoofing the speed of the vehicle","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:11:11.115Z","updatedAt":"2023-12-07T16:11:11.115Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to inject malicious CAN packets to reprogram the Smart Junction Box of Ford Escape to turn off all the lights and continuously cause interior lights to continuously flash.","technique":[{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"createdAt":"2023-12-07T16:18:00.911Z","updatedAt":"2023-12-07T16:28:22.946Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to flash modified firmware to a Jeep Cherokee’s ECU by brute forcing the checksum and using a mechanic’s tool. The checksum was found to only be 16-bits and the ECU had no protections against brute-forcing. Researchers concluded it can be brute-forced in less than 9 hours.","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"}],"createdAt":"2023-12-07T17:13:01.992Z","updatedAt":"2023-12-07T17:14:21.072Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to find the security access algorithm and key constants used for a Jeep Cherokee ECU within the mechanic’s tool and the ECU firmware.","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"createdAt":"2023-12-07T17:15:57.713Z","updatedAt":"2023-12-07T17:15:57.713Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility for an attacker to activate brakes through the collision prevention system in the Anti-lock Braking System for a Jeep Cherokee by first disabling both the Adaptive Cruise Control and Front Facing Camera Module and then replaying the messages used during a collision event.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T17:18:42.347Z","updatedAt":"2023-12-07T17:18:55.279Z"},{"title":"Abuse elevation control mechanism","type":"technique","description":"\n<p>Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Many modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on an ECU. Authorization has to be granted to specific system users or system processes in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1548/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0024","technique":[],"updatedAt":"2023-08-09T13:56:07.798Z","id":"ATM-T0024"},{"title":"Exploit ECU for lateral movement","type":"technique","description":"\n<p>Adversaries may exploit an ECU’s services to gain unauthorized access to internal systems once inside of a vehicle network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable control of additional ECUs on the vehicle network.</p><p>An adversary may need to determine if the remote system is in a vulnerable state, which may be done through network service scanning or other discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation.</p><p>Depending on the permissions level of the vulnerable remote service an adversary may achieve exploitation for privilege escalation as a result of lateral movement exploitation as well.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1210/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.143Z","mitreId":"T0052","technique":[],"updatedAt":"2023-08-09T13:56:07.864Z","id":"ATM-T0052"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","technique":[],"updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"},{"title":"Data from local system","type":"technique","description":"\n<p>Adversaries may search local system sources, such as file systems or local databases, and logs to find files of interest and sensitive data prior to Exfiltration.</p><p>Adversaries may do this using a command and scripting interpreter, such as cmd, which has functionality to interact with the file system to gather information.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1005/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.162Z","mitreId":"T0059","technique":[],"updatedAt":"2023-08-09T13:56:07.917Z","id":"ATM-T0059"},{"title":"Rogue cellular base station","type":"technique","description":"\n<p>An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate the vehicle cellular interface’s communication. A compromised cellular femtocell could be used to carry out this technique<a class=\"external-link\" href=\"http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1467/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.164Z","mitreId":"T0008","technique":[],"updatedAt":"2023-08-09T13:56:07.922Z","id":"ATM-T0008"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"As long as the rogue base station is still in range, remote access can be maintained for a command and control purpose using the vulnerabilities in the cellular/telecommunications modules.","mitreId":" ","technique":[{"title":"Cellular communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s cellular communication system in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0062","updatedAt":"2023-08-09T13:56:07.839Z","id":"ATM-T0062"}],"updatedAt":"2023-08-11T08:13:52.189Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Researchers exploited a known vulnerability in the web browser framework to gain initial access: “…their Webkit was kept 534.34 for a long time, without fixing all the vulnerabilities. Thus, our exploit utilizes only one vulnerability to achieve arbitrary code execution.”","mitreId":" ","technique":[{"title":"Browser compromise","type":"technique","description":"\n<p>Based on <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1456/\" rel=\"nofollow\">MITRE ATT&amp;CK’s ‘Drive-by Compromise’ technique</a>, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability.","createdAt":"2023-08-09T09:51:19.127Z","mitreId":"T0011","updatedAt":"2023-08-09T13:56:07.918Z","id":"ATM-T0011"}],"updatedAt":"2023-08-11T08:13:52.662Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to send flood CAN packets to increase or decrease a Ford Escape's speedometer and odometer","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:08:06.666Z","updatedAt":"2023-12-07T16:08:06.666Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers sent diagnostic test packets to a Toyota Prius that kill fuel intake to the engine which resulted in permanent damage to the car.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:36:09.417Z","updatedAt":"2023-12-07T16:36:09.417Z"},{"type":"procedure","title":"Evaluating Physical-Layer BLE Location Tracking Attacks on Mobile Devices","description":"In summary, we find that physical layer tracking of BLE devices is indeed feasible, but it is only reliable under limited conditions, and for specific devices with extremely unique fingerprints, and when the target device has a relatively stable temperature. The dataset and code that we used to perform this evaluation can be found at: https://github.com/ucsdsysnet/blephytracking.git","technique":[{"title":"Location tracking","type":"technique","description":"<p>An adversary could use a malicious or exploited application to surreptitiously track the vehicle’s physical location through use of standard operating system APIs.</p><p>This technique’s description was adapted from <a href=\"https://attack.mitre.org/techniques/T1430/\">MITRE ATT&amp;CK</a>.</p>","createdAt":"2023-08-09T09:51:19.131Z","mitreId":"T0043","updatedAt":"2024-03-19T18:50:19.658Z","id":"ATM-T0043","lastModifiedAt":"2024-03-19T18:50:19.657Z"}],"createdAt":"2023-12-07T18:10:32.282Z","updatedAt":"2023-12-07T18:10:32.282Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to track a Jeep Cherokee's location by querying the GPS coordinates of the vehicle. They exploited this in 2 ways, by running a script or exploiting the exposed D-bus service.","technique":[{"title":"System network configuration discovery","type":"technique","description":"\n<p>Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0099\" rel=\"nofollow\">Arp</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0100\" rel=\"nofollow\">ipconfig</a>/<a class=\"external-link\" href=\"https://attack.mitre.org/software/S0101\" rel=\"nofollow\">ifconfig</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0102\" rel=\"nofollow\">nbtstat</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0103\" rel=\"nofollow\">route</a>.</p><p>Adversaries may use the information from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1016\" rel=\"nofollow\">System Network Configuration Discovery</a> during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.167Z","mitreId":"T0048","updatedAt":"2023-08-09T13:56:07.931Z","id":"ATM-T0048"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T17:53:50.321Z","updatedAt":"2023-12-07T17:54:05.243Z"},{"type":"procedure","title":"There Will Be Glitches Extracting and Analyzing Automotive Firmware Efficiently","description":"Researchers were able to extract the firmware from several ECUs using voltage fault injection attacks to glitch the read memory UDS service using ChipWhisperer and Inspector FI which can perform fault injection.","technique":[{"title":"Hardware fault injection","type":"technique","description":"<p>The adversary may attempt fault injection attacks to elevate privileges by ‘flipping’ bits that control authentication states. For example, through voltage or clock glitching it may be possible to bypass password authentication on debug interfaces. Many different fault injection attacks exist, some require direct physical access to the target ECU and specialized tools (e.g., ChipSHOUTER), while others can be implemented in software (e.g., Row hammer).</p>","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0028","updatedAt":"2024-02-21T14:39:31.150Z","id":"ATM-T0028","lastModifiedAt":"2024-02-21T14:39:31.150Z"},{"title":"Abuse UDS for collection","type":"technique","description":"\n<p>The adversary can attempt to abuse UDS ‘read’ capabilities, such as ‘read memory by address’ to access customer information from an ECU’s storage or memory.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.125Z","mitreId":"T0055","updatedAt":"2023-08-09T13:56:07.813Z","id":"ATM-T0055"},{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"}],"createdAt":"2023-12-07T19:11:20.514Z","updatedAt":"2023-12-08T17:08:03.862Z"},{"title":"Collection","type":"tactic","description":"\n<p>The adversary is trying to gather data of interest to their goal.</p><p>Collection consists of techniques used to identify and gather information, such as sensitive files, location history, or recordings of in-vehicle audio from a target vehicle prior to exfiltration. This category also covers locations on a system or vehicle network where the adversary may look for information to exfiltrate.</p><p>This tactic was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0035/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.114Z","mitreId":"TA0010","technique":[{"title":"Abuse UDS for collection","type":"technique","description":"\n<p>The adversary can attempt to abuse UDS ‘read’ capabilities, such as ‘read memory by address’ to access customer information from an ECU’s storage or memory.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.125Z","mitreId":"T0055","updatedAt":"2023-08-09T13:56:07.813Z","id":"ATM-T0055"},{"title":"Access personal information","type":"technique","description":"\n<p>An adversary could attempt to access the vehicle occupants' personal information. This could include calendar entries, call logs, contact lists, media playlists, or notifications (including SMS messages, emails, etc.).</p><p>An adversary could also attempt to access occupants' personal data via an ECU’s application data for apps such as Facebook or Gmail.</p><p>The specific methods for accessing this information can vary from ECU to ECU, but generally include the use of the standard operating system APIs, or by directly accessing application files. Some of these approaches may require elevated privileges.</p><p>This technique’s description was adapted from 5 techniques from the MITRE ATT&amp;CK for Mobile Matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1435/\" rel=\"nofollow\">Access Calendar Entries</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1433/\" rel=\"nofollow\">Access Call Log</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1432/\" rel=\"nofollow\">Access Contact List</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1517/\" rel=\"nofollow\">Access Notifications</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.134Z","mitreId":"T0056","updatedAt":"2023-08-09T13:56:07.837Z","id":"ATM-T0056"},{"title":"Access vehicle telemetry","type":"technique","description":"\n<p>Adversaries may try to collect vehicle telemetry, including propulsion system status (e.g., hard acceleration or braking), whether vehicle enclosures are locked / unlocked, etc.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0057","updatedAt":"2023-08-09T13:56:07.964Z","id":"ATM-T0057"},{"title":"Capture camera or audio","type":"technique","description":"\n<p>Adversaries may utilize the vehicle’s cameras and microphones to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the vehicle’s camera and microphones on the vehicle to capture images, audio recordings, or video.</p><p>This technique’s description was adapted from two techniques in the MITRE ATT&amp;CK for Mobile matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1429/\" rel=\"nofollow\">Capture Audio</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1512/\" rel=\"nofollow\">Capture Camera</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0058","updatedAt":"2023-08-09T13:56:07.891Z","id":"ATM-T0058"},{"title":"Capture SMS message","type":"technique","description":"\n<p>A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.</p><p>On Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.</p><p>This technique description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1412/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0035","updatedAt":"2023-08-09T13:56:07.804Z","id":"ATM-T0035"},{"title":"Data from local system","type":"technique","description":"\n<p>Adversaries may search local system sources, such as file systems or local databases, and logs to find files of interest and sensitive data prior to Exfiltration.</p><p>Adversaries may do this using a command and scripting interpreter, such as cmd, which has functionality to interact with the file system to gather information.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1005/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.162Z","mitreId":"T0059","updatedAt":"2023-08-09T13:56:07.917Z","id":"ATM-T0059"},{"title":"Input capture","type":"technique","description":"\n<p>Adversaries may capture user input to obtain credentials or other information from the user through various methods.</p><p>Malware may masquerade as a legitimate third-party keyboard to record user keystrokes.<sup><a class=\"external-link\" href=\"https://zeltser.com/third-party-keyboards-security/\" rel=\"nofollow\">[1]</a></sup> On Android, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.</p><p>On Android, malware may abuse accessibility features to record keystrokes by registering an <code>AccessibilityService</code> class, overriding the <code>onAccessibilityEvent</code> method, and listening for the <code>AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED</code> event type. The event object passed into the function will contain the data that the user typed.</p><p>Additional methods of keylogging may be possible if root access is available.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1417/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.141Z","mitreId":"T0036","updatedAt":"2023-08-09T13:56:07.860Z","id":"ATM-T0036"},{"title":"Location tracking","type":"technique","description":"<p>An adversary could use a malicious or exploited application to surreptitiously track the vehicle’s physical location through use of standard operating system APIs.</p><p>This technique’s description was adapted from <a href=\"https://attack.mitre.org/techniques/T1430/\">MITRE ATT&amp;CK</a>.</p>","createdAt":"2023-08-09T09:51:19.131Z","mitreId":"T0043","updatedAt":"2024-03-19T18:50:19.658Z","id":"ATM-T0043","lastModifiedAt":"2024-03-19T18:50:19.657Z"},{"title":"Network information discovery","type":"technique","description":"\n<p>Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1507/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0060","updatedAt":"2023-08-09T13:56:07.946Z","id":"ATM-T0060"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"},{"title":"Screen capture","type":"technique","description":"\n<p>Adversaries may use screen captures to collect information about applications running in the foreground, capture user data, credentials, or other sensitive information. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.<a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>This technique’s description was adapted from the ‘Screen capture’ technique in <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1113/\" rel=\"nofollow\">MITRE ATT&amp;CK for Enterprise</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1513/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>.","createdAt":"2023-08-09T09:51:19.171Z","mitreId":"T0061","updatedAt":"2023-08-09T13:56:08.061Z","id":"ATM-T0061"}],"updatedAt":"2023-08-09T13:55:03.199Z","id":"ATM-TA0010"},{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","technique":[],"updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"},{"title":"Software discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of software and software versions that are installed on a vehicle. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to exploitation for privilege escalation.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1518/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0046","technique":[],"updatedAt":"2023-08-09T13:56:07.903Z","id":"ATM-T0046"},{"title":"Screen capture","type":"technique","description":"\n<p>Adversaries may use screen captures to collect information about applications running in the foreground, capture user data, credentials, or other sensitive information. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.<a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>This technique’s description was adapted from the ‘Screen capture’ technique in <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1113/\" rel=\"nofollow\">MITRE ATT&amp;CK for Enterprise</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1513/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>.","createdAt":"2023-08-09T09:51:19.171Z","mitreId":"T0061","technique":[],"updatedAt":"2023-08-09T13:56:08.061Z","id":"ATM-T0061"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The NBT (Infotainment Head Unit) can be modified to contain a backdoor for persistent attacker entry.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.007Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers used a web browser vulnerability to make the browser crash.","mitreId":"","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed diagnostic test packets in Toyota Prius that can spoof the fuel gauge to an arbitrary state.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:38:05.167Z","updatedAt":"2023-12-07T16:38:05.167Z"},{"type":"procedure","title":"Driving down the rabbit hole","description":"Researchers were able to extract debug log/data, navigation data, contacts, waypoints, SRAM dumps, flash dumps, and an unregistered web domain from the in-vehicle infotainment (IVI) debug mode and using an SD card.","technique":[{"title":"Data from local system","type":"technique","description":"\n<p>Adversaries may search local system sources, such as file systems or local databases, and logs to find files of interest and sensitive data prior to Exfiltration.</p><p>Adversaries may do this using a command and scripting interpreter, such as cmd, which has functionality to interact with the file system to gather information.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1005/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.162Z","mitreId":"T0059","updatedAt":"2023-08-09T13:56:07.917Z","id":"ATM-T0059"},{"title":"Access personal information","type":"technique","description":"\n<p>An adversary could attempt to access the vehicle occupants' personal information. This could include calendar entries, call logs, contact lists, media playlists, or notifications (including SMS messages, emails, etc.).</p><p>An adversary could also attempt to access occupants' personal data via an ECU’s application data for apps such as Facebook or Gmail.</p><p>The specific methods for accessing this information can vary from ECU to ECU, but generally include the use of the standard operating system APIs, or by directly accessing application files. Some of these approaches may require elevated privileges.</p><p>This technique’s description was adapted from 5 techniques from the MITRE ATT&amp;CK for Mobile Matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1435/\" rel=\"nofollow\">Access Calendar Entries</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1433/\" rel=\"nofollow\">Access Call Log</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1432/\" rel=\"nofollow\">Access Contact List</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1517/\" rel=\"nofollow\">Access Notifications</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.134Z","mitreId":"T0056","updatedAt":"2023-08-09T13:56:07.837Z","id":"ATM-T0056"},{"title":"Removable media","type":"technique","description":"\n<p>Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1052/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0006","updatedAt":"2023-08-09T13:56:07.893Z","id":"ATM-T0006"}],"createdAt":"2023-12-07T17:35:46.219Z","updatedAt":"2023-12-07T17:36:21.399Z"},{"type":"procedure","title":"Exploiting Wi-Fi Stack on Tesla Model S","description":"Researchers were able to obtain the MAC address of a Tesla Model 3 by sending de-authentication frames to all nearby APs and sniffing the traffic when the Tesla reconnects.","technique":[{"title":"Jamming or denial of service","type":"technique","description":"\n<p>An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS, key fobs) to prevent the mobile device from communicating.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1464/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0002","updatedAt":"2023-08-09T13:56:07.876Z","id":"ATM-T0002"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"},{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"}],"createdAt":"2023-12-07T17:39:30.613Z","updatedAt":"2023-12-07T17:39:53.645Z"},{"type":"procedure","title":"Exploiting Wi-Fi Stack on Tesla Model S","description":"Researchers modified the compromised system to make it accessible over a Wi-Fi telnet interface: “Attacker setups an AP and a DHCP server in this AP”, “The attacker can telnet to port 23“","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T17:43:03.911Z","updatedAt":"2023-12-07T17:43:37.816Z"},{"title":"Browser compromise","type":"technique","description":"\n<p>Based on <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1456/\" rel=\"nofollow\">MITRE ATT&amp;CK’s ‘Drive-by Compromise’ technique</a>, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability.","createdAt":"2023-08-09T09:51:19.127Z","mitreId":"T0011","technique":[],"updatedAt":"2023-08-09T13:56:07.918Z","id":"ATM-T0011"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","technique":[],"updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"CAN bus denial of service","type":"technique","description":"\n<p>An adversary with access to one of the vehicle’s CAN busses may be able to perform a denial of service attack by flooding the bus with high-priority messages, preventing other ECUs from being able to communicate.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.145Z","mitreId":"T0068","technique":[],"updatedAt":"2023-08-09T13:56:07.873Z","id":"ATM-T0068"},{"title":"Capture camera or audio","type":"technique","description":"\n<p>Adversaries may utilize the vehicle’s cameras and microphones to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the vehicle’s camera and microphones on the vehicle to capture images, audio recordings, or video.</p><p>This technique’s description was adapted from two techniques in the MITRE ATT&amp;CK for Mobile matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1429/\" rel=\"nofollow\">Capture Audio</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1512/\" rel=\"nofollow\">Capture Camera</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0058","technique":[],"updatedAt":"2023-08-09T13:56:07.891Z","id":"ATM-T0058"},{"title":"Process injection","type":"technique","description":"\n<p>Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.</p><p>There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific.</p><p>More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1055/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.159Z","mitreId":"T0029","technique":[],"updatedAt":"2023-08-09T13:56:07.911Z","id":"ATM-T0029"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"CAN traffic was monitored to recover the IC ECU’s static UDS security key.","mitreId":"T0038","technique":[{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"updatedAt":"2023-08-11T08:13:51.760Z","id":"ATM-T0038"},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"The vehicle trusting the spoofed GPS coordinates more than other location sources commands the vehicle to utilize these messages to stay in lane when in fact the vehicle is departing from the lane either off the road or into oncoming traffic.","mitreId":"T0071","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-11T08:13:52.328Z","id":"ATM-T0071"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Researchers used the ape-updater executable file which opens 2 TCP ports that accept update instructions and HTTP communication. A user file was served through HTTP and then downloaded through the ape-updater which allowed any root privileged command to be executed","mitreId":" ","technique":[{"title":"Abuse elevation control mechanism","type":"technique","description":"\n<p>Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Many modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on an ECU. Authorization has to be granted to specific system users or system processes in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1548/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0024","updatedAt":"2023-08-09T13:56:07.798Z","id":"ATM-T0024"}],"updatedAt":"2023-08-11T08:13:52.670Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"A command and scripting interpreter was used to execute commands on the APE device: “(…) the command \"system\" can be used to execute any Linux command with ROOT privilege.”","mitreId":" ","technique":[{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"}],"updatedAt":"2023-08-11T08:13:52.755Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers used the obtained VPN keys to establish a VPN connection","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.845Z","id":""},{"title":"Security and Privacy Vulnerabilities of In-Car Wireless Networks: A Tire Pressure Monitoring System Case Study","type":"procedure","description":"Researchers extracted Tire Pressure Monitoring System (TPMS) timing information between activation signals and sensor responses by using various TPM sensors and radio data capturing equipment.\n\nResearchers were able to monitor the TPMS channel by using a custom eavesdropper to record radio waves and custom Matlab decoders to extract the pressure, temperature, and sensor ID of high energy packets.","mitreId":" ","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"updatedAt":"2023-08-11T08:13:53.035Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers authenticated and reprogrammed the Engine Control Module of a Toyota Prius by capturing and reverse engineering the reprogramming process using the EcomCat software","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"}],"createdAt":"2023-12-07T16:40:46.764Z","updatedAt":"2023-12-07T16:41:25.783Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility for an attacker to accelerate or decelerate a Jeep arbitrarily by simulating the different button pushes for cruise control.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:58:13.714Z","updatedAt":"2023-12-07T16:58:13.714Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to put an ECU into diagnostic mode while the vehicle is moving by spoofing the RPM CAN messages to trick the Power Steering Control Module that the car is not moving.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T17:17:55.904Z","updatedAt":"2023-12-07T17:18:09.194Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"“…acquiring the seeds/keys via bruteforce is attainable in a matter of days. Additionally, there are some keys/seeds that are hardcoded, thus making credential access even easier.” In some cases it was also found that the challenge-response algorithm’s result was never used, thus removing the need for credential authentication at all to run attacks.","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"createdAt":"2023-12-07T18:01:44.390Z","updatedAt":"2023-12-07T18:01:44.390Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The researchers can collect many types of telemetry data, including vehicle speed, acceleration, fuel level, and brake pressure. This data can be used as part of a further attack by giving the attacker information they can use to modify vehicle performance or change what the occupants see.","technique":[{"title":"Access vehicle telemetry","type":"technique","description":"\n<p>Adversaries may try to collect vehicle telemetry, including propulsion system status (e.g., hard acceleration or braking), whether vehicle enclosures are locked / unlocked, etc.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0057","updatedAt":"2023-08-09T13:56:07.964Z","id":"ATM-T0057"}],"createdAt":"2023-12-07T18:03:25.188Z","updatedAt":"2023-12-07T18:03:25.188Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers connected a malicious device to the vehicle using the sniffed MAC address and using a laptop to brute-force the Bluetooth pairing PIN used for the Bluetooth pairing request.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:50:04.762Z","updatedAt":"2023-12-07T18:50:04.762Z"},{"title":"Jamming or denial of service","type":"technique","description":"\n<p>An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS, key fobs) to prevent the mobile device from communicating.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1464/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0002","technique":[],"updatedAt":"2023-08-09T13:56:07.876Z","id":"ATM-T0002"},{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","technique":[],"updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"},{"title":"Input prompt","type":"technique","description":"\n<p>The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.</p><p>Compared to traditional PCs, the constrained display size of vehicle screens may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.<a class=\"external-link\" href=\"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\" rel=\"nofollow\"><sup>[1]</sup></a></p><p>Specific approaches to this technique include:</p><h3 id=\"Inputprompt-Impersonatetheidentityofalegitimateapplication\">Impersonate the identity of a legitimate application</h3><p>A malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the vehicle. The malicious app could then prompt the user for sensitive information.<a class=\"external-link\" href=\"https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/\" rel=\"nofollow\"><sup>[2]</sup></a></p><h3 id=\"Inputprompt-Displayapromptontopofarunninglegitimateapplication\">Display a prompt on top of a running legitimate application</h3><p>A malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the <code>ActivityManager</code> API.<a class=\"external-link\" href=\"https://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks%28int%29\" rel=\"nofollow\"><sup>[3]</sup></a><a class=\"external-link\" href=\"http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag\" rel=\"nofollow\"><sup>[4]</sup></a>. A malicious application can still abuse Android’s accessibility features to determine which application is currently in the foreground.<a class=\"external-link\" href=\"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\" rel=\"nofollow\"><sup>[5]</sup></a> Approaches to display a prompt include:</p><ul><li><p>A malicious application could start a new activity on top of a running legitimate application.<a class=\"external-link\" href=\"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://conference.hitb.org/hitbsecconf2011kul/materials/D1T1%20-%20Riley%20Hassell%20-%20Exploiting%20Androids%20for%20Fun%20and%20Profit.pdf\" rel=\"nofollow\"><sup>[6]</sup></a> Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.<a class=\"external-link\" href=\"https://developer.android.com/guide/components/activities/background-starts\" rel=\"nofollow\"><sup>[7]</sup></a></p></li><li><p>A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the <code>SYSTEM_ALERT_WINDOW</code> permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store.<a class=\"external-link\" href=\"http://cloak-and-dagger.org/\" rel=\"nofollow\"><sup>[8]</sup></a><a class=\"external-link\" href=\"https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/\" rel=\"nofollow\"><sup>[9]</sup></a><a class=\"external-link\" href=\"https://www.skycure.com/blog/accessibility-clickjacking/\" rel=\"nofollow\"><sup>[10]</sup></a> The <code>SYSTEM_ALERT_WINDOW</code> permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.<a class=\"external-link\" href=\"https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/\" rel=\"nofollow\"><sup>[11]</sup></a></p></li></ul><h3 id=\"Inputprompt-Fakedevicenotifications\">Fake device notifications</h3><p>A malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.<a class=\"external-link\" href=\"https://www.group-ib.com/blog/gustuff\" rel=\"nofollow\"><sup><u>[12]</u></sup></a></p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1411/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0037","technique":[],"updatedAt":"2023-08-09T13:56:07.885Z","id":"ATM-T0037"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","technique":[],"updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"OS credential dumping","type":"technique","description":"\n<p>Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0008\" rel=\"nofollow\">Lateral Movement</a> and access restricted information.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1003/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.160Z","mitreId":"T0039","technique":[],"updatedAt":"2023-08-09T13:56:07.913Z","id":"ATM-T0039"},{"title":"Reprogram co located computing device for privilege escalation","type":"technique","description":"\n<p>The adversary may attempt to elevate privileges by using their access on one of the ECU’s computing devices to reprogram another computing device on the same ECU. For example, if an ECU that uses a system-on-chip for most tasks and a separate microcontroller for communication on the vehicle’s CAN network, an adversary that can execute code on the SoC could attempt to reprogram the CAN microcontroller.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0030","technique":[],"updatedAt":"2023-08-09T13:56:07.926Z","id":"ATM-T0030"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"An operating system kernel vulnerability (CVE-2013-6282) is used to elevate privileges.","mitreId":"T0026","technique":[{"title":"Exploit OS vulnerability","type":"technique","description":"\n<p>A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1404/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.138Z","mitreId":"T0026","updatedAt":"2023-08-09T13:56:07.958Z","id":"ATM-T0026"}],"updatedAt":"2023-08-11T08:13:52.157Z","id":"ATM-T0026"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Unsecured SSH credentials in the CID’s .ssh folder were used to access the ‘IC’ ECU.","mitreId":"T0040","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:51.786Z","id":"ATM-T0040"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"Vulnerabilities in the NBT were used to exploit bugs in the in-vehicle browser (the “DevCtrlBrowser_Bon“) for the purpose of achieving browser privileges.","mitreId":" ","technique":[{"title":"Exploit co located computing device for privilege escalation","type":"technique","description":"\n<p>Adversaries may be able to leverage their access on one of an ECU’s computing devices to gain control of another computing device on the same ECU. For example, it may be possible for a compromised USB controller or Wi-Fi/Bluetooth chip to gain control of the operating system running on a separate chip but still part of the same ECU.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.129Z","mitreId":"T0025","updatedAt":"2023-08-09T13:56:07.825Z","id":"ATM-T0025"}],"updatedAt":"2023-08-11T08:13:52.014Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"BMW ConnectedDrive Service traffic was captured using the rogue cellular base station and vulnerabilities in the NBT. This was used to find bugs in the “DevCtrlBrowser_Bon“ and exploit them.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.114Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"As a result of unintended CAN messages, control of ECUs can be manipulated and functionality can be interrupted in many areas of the vehicle.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.338Z","id":""},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"Noting parameters during which the target AV has the greatest resulting displacement from spoofed GPS location coordinates the attacker fine tunes the attack. The attacker takes advantage of the MSF algorithm by providing false locations at an exponential rate during times at which the GPS is the most reliable data input to location calculations. This results in messages for the vehicle to change location, but not enough to endanger the attacker.","mitreId":"T0071","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-11T08:13:53.189Z","id":"ATM-T0071"},{"title":"Losing the Car Keys: Wireless PHY-Layer Insecurity in EV Charging","type":"procedure","description":"Security researchers were successfully able to capture NMK keys through plaintext data transmissions.","mitreId":"T0040","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:52.448Z","id":"ATM-T0040"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Security researchers caused the APE device to expose credentials to other devices on the vehicle network: “(…)we served the file /var/etc/saccess/tesla1 and downloaded it from the simple HTTP server in ape-updater. Its content is the password of the account tesla1 which could be used to pass the \"auth\" command.”","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:52.652Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"The researchers used a token to move laterally from the “IC” device to the “CID”.","mitreId":" ","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:52.864Z","id":""},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to find the checksum algorithm used in a Jeep Cherokee within the mechanic’s tool and in the ECU which validates/supplies the checksums.","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"createdAt":"2023-12-07T17:15:32.180Z","updatedAt":"2023-12-07T17:15:32.180Z"},{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","technique":[],"updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"},{"title":"Exploit TEE vulnerability","type":"technique","description":"\n<p>A malicious app or other attack vector could be used to exploit vulnerabilities in code running within a Trusted Execution Environment (TEE) <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/thomas-holmes\" rel=\"nofollow\">[1]</a></sup>, which could include ARM TrustZone, SEs, TPMs, EVITA HSMs, SHEs, SPUs, CAAMs, or similar. The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data <sup><a class=\"external-link\" href=\"https://bits-please.blogspot.in/2016/06/extracting-qualcomms-keymaster-keys.html\" rel=\"nofollow\">[2]</a></sup>. Escalated operating system privileges may be first required in order to have the ability to attack the TEE <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/ekberg\" rel=\"nofollow\">[3]</a></sup>. If not, privileges within the TEE can potentially be used to exploit the operating system <sup><a class=\"external-link\" href=\"http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html\" rel=\"nofollow\">[4]</a></sup>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1405/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.130Z","mitreId":"T0027","technique":[],"updatedAt":"2023-08-09T13:56:07.829Z","id":"ATM-T0027"},{"title":"Malicious app","type":"technique","description":"\n<p>Malicious applications could be used by adversaries to gain a presence on a vehicle.</p><p>Some vehicles are configured to allow application installation only from an authorized app store, and an adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.</p><p>App stores typically require developer registration and use vetting techniques to identify malicious applications, which adversaries may seek to circumvent by downloading new code at runtime or by using obfuscation techniques.</p><p>Adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. <a class=\"external-link\" href=\"http://dl.acm.org/citation.cfm?id=2592796\" rel=\"nofollow\"><sup>[1]</sup></a> <a class=\"external-link\" href=\"https://jon.oberheide.org/files/summercon12-bouncer.pdf\" rel=\"nofollow\"><sup>[2]</sup></a> <a class=\"external-link\" href=\"https://media.blackhat.com/bh-us-12/Briefings/Percoco/BH_US_12_Percoco_Adventures_in_Bouncerland_WP.pdf\" rel=\"nofollow\"><sup>[3]</sup></a> <a class=\"external-link\" href=\"https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei\" rel=\"nofollow\"><sup>[4]</sup></a></p><p>Adversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. <a class=\"external-link\" href=\"https://jon.oberheide.org/files/summercon12-bouncer.pdf\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>Adversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. <a class=\"external-link\" href=\"https://jon.oberheide.org/blog/2010/06/25/remote-kill-and-install-on-google-android/\" rel=\"nofollow\"><sup>[5]</sup></a> <a class=\"external-link\" href=\"http://www.vvdveen.com/publications/BAndroid.pdf\" rel=\"nofollow\"><sup>[6]</sup></a> (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)</p><p>This ‘Malicious app’ technique also includes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or the OEM’s app store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.</p><p>Delivery methods for the malicious application include spearphishing attachments, spearphishing links, and third party app stores (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.<a class=\"external-link\" href=\"https://www.ibtimes.co.uk/danger-lurks-third-party-android-app-stores-1544861\" rel=\"nofollow\"><sup>[7]</sup></a><a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/user-beware-rooting-malware-found-in-3rd-party-app-stores/\" rel=\"nofollow\"><sup>[8]</sup></a><a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/flappy-bird-and-third-party-app-stores/\" rel=\"nofollow\"><sup>[9]</sup></a></p><p>Some Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.<a class=\"external-link\" href=\"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\" rel=\"nofollow\"><sup>[10]</sup></a></p><p>Finally, this technique also includes situations where an adversary develops and distributes malware that masquerades as as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.</p><p>Embedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.<a class=\"external-link\" href=\"http://ieeexplore.ieee.org/document/6234407\" rel=\"nofollow\"><sup>[11]</sup></a> The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.</p><p>Pretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.<a class=\"external-link\" href=\"https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/\" rel=\"nofollow\"><sup>[12]</sup></a></p><p>Malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.</p><p>This technique is a combination of three techniques described in the MITRE ATT&amp;CK matrix for mobile devices: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1475/\" rel=\"nofollow\">Deliver Malicious App via Authorized App Store</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1476/\" rel=\"nofollow\">Deliver Malicious App via Other Means</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1444/\" rel=\"nofollow\">Masquerade as Legitimate Application</a>.","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0014","technique":[],"updatedAt":"2023-08-09T13:56:07.897Z","id":"ATM-T0014"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Keen Lab security researchers demonstrate that UDP datagrams can be sent to the gateway on ports 20100 and 20101 to retrainsmit them as CAN frames to affect vehicle functions: “By the design that Gateway treats the UDP broadcast on 20100 and 20101 ports as a kind of CAN message and transports them to the real CAN bus, we can easily fake some UDP signals to do some motions like lock or unlock by sending a UDP. For example, we send a UDP as follow to open the trunk.“\n\nThey also found that arbitrary CAN messages can be sent to any CAN bus on the vehicle network by misusing a diagnostic function: “We can send any CAN message to any CAN bus channel in the car, thanks to the Gateway leaving an obvious way in diagtask which can be used to inject CAN bus (diagnosis function 0x04) by sending UDP messages to 3500 port on the Gateway“\n\nSome messages were selectively blocked to disable safety interlocks: “we can block some important messages (like the ID of 0x218 on BDY CAN) by changing the target ID in firmware after we locating the structure stored in the firmware to open the trunk or disable the auto lock function when car is in very high speed. And it is quite dangerous to block some ESP messages from CH to PT CAN bus“","mitreId":"T0071","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-11T08:13:51.942Z","id":"ATM-T0071"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"Root-privileged shells are used for running commands via Local and Remote Code Execution.","mitreId":" ","technique":[{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"}],"updatedAt":"2023-08-11T08:13:51.993Z","id":""},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"A radio spoofs GPS signals to provide inaccurate location coordinates.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:53.021Z","id":""},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"A radio spoofs GPS signals tuned to maximize the MSF design weakness to provide inaccurate but trusted location coordinates.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.296Z","id":""},{"title":"Losing the Car Keys: Wireless PHY-Layer Insecurity in EV Charging","type":"procedure","description":"Electromagnetic side channel attack conducted on Combined Charging System stations utilizing powerline communications successfully collected encryption keys (NMK), unique vehicle identifiers (EV ID, MAC address), and personal information.","mitreId":"T0038","technique":[{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"updatedAt":"2023-08-11T08:13:52.352Z","id":"ATM-T0038"},{"title":"Losing the Car Keys: Wireless PHY-Layer Insecurity in EV Charging","type":"procedure","description":"Permanent vehicle identifiers, EV ID and MAC address, were collected. Both are protected under EU GDPR.","mitreId":"T0056","technique":[{"title":"Access personal information","type":"technique","description":"\n<p>An adversary could attempt to access the vehicle occupants' personal information. This could include calendar entries, call logs, contact lists, media playlists, or notifications (including SMS messages, emails, etc.).</p><p>An adversary could also attempt to access occupants' personal data via an ECU’s application data for apps such as Facebook or Gmail.</p><p>The specific methods for accessing this information can vary from ECU to ECU, but generally include the use of the standard operating system APIs, or by directly accessing application files. Some of these approaches may require elevated privileges.</p><p>This technique’s description was adapted from 5 techniques from the MITRE ATT&amp;CK for Mobile Matrix: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1435/\" rel=\"nofollow\">Access Calendar Entries</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1433/\" rel=\"nofollow\">Access Call Log</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1432/\" rel=\"nofollow\">Access Contact List</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1517/\" rel=\"nofollow\">Access Notifications</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.134Z","mitreId":"T0056","updatedAt":"2023-08-09T13:56:07.837Z","id":"ATM-T0056"}],"updatedAt":"2023-08-11T08:13:52.675Z","id":"ATM-T0056"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"The security researchers moved laterally through the vehicle network by reprogramming ECUs: “Now, we can program our customized code into gateway and ECUs like what we did last year.”","mitreId":" ","technique":[{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"}],"updatedAt":"2023-08-11T08:13:52.643Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers obtained over the air the MAC address of an affected car by traffic sniffing using the “Ubertooth One” tool","mitreId":" ","technique":[{"title":"System network configuration discovery","type":"technique","description":"\n<p>Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0099\" rel=\"nofollow\">Arp</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0100\" rel=\"nofollow\">ipconfig</a>/<a class=\"external-link\" href=\"https://attack.mitre.org/software/S0101\" rel=\"nofollow\">ifconfig</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0102\" rel=\"nofollow\">nbtstat</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0103\" rel=\"nofollow\">route</a>.</p><p>Adversaries may use the information from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1016\" rel=\"nofollow\">System Network Configuration Discovery</a> during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.167Z","mitreId":"T0048","updatedAt":"2023-08-09T13:56:07.931Z","id":"ATM-T0048"}],"updatedAt":"2023-08-11T08:13:53.024Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers gained remote code execution by exploiting a vulnerability present during the creation of a Bluetooth connection\n\nThey exploited an out-of-bound heap memory read","mitreId":" ","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"updatedAt":"2023-08-11T08:13:53.193Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to replay packets based on the Ford Escapes' steering wheel position to steer the wheel to any position through Power Steering Control Module","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:10:45.511Z","updatedAt":"2023-12-07T16:10:45.511Z"},{"type":"procedure","title":"Exploiting Wi-Fi Stack on Tesla Model S","description":"Researchers were able to gain code execution in the Wi-Fi chip and Linux command execution for a Tesla Model 3 by spraying the memory and sending a corrupt data frame to exploit a vulnerability.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T17:40:16.257Z","updatedAt":"2023-12-07T17:40:16.257Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to control the radio volume, bass levels, and radio station of a Jeep Cherokee by sending arbitrary commands to the Uconnect system.","technique":[{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"createdAt":"2023-12-07T17:54:48.959Z","updatedAt":"2023-12-07T17:54:48.959Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The researchers were able to dump the memory from nearly any ECU connected to the CAN networks.","technique":[{"title":"Abuse UDS for collection","type":"technique","description":"\n<p>The adversary can attempt to abuse UDS ‘read’ capabilities, such as ‘read memory by address’ to access customer information from an ECU’s storage or memory.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.125Z","mitreId":"T0055","updatedAt":"2023-08-09T13:56:07.813Z","id":"ATM-T0055"}],"createdAt":"2023-12-07T18:03:43.143Z","updatedAt":"2023-12-07T18:03:43.143Z"},{"type":"procedure","title":"Evaluating Physical-Layer BLE Location Tracking Attacks on Mobile Devices","description":"To perform a physical-layer fingerprinting attack, the attacker must be equipped with a Software Defined Radio sniffer: a radio receiver capable of recording raw I/Q radio signals. Although, as we show in Section IV-D, it is sufficient to use a modest hobbyist-level SDR ($150).","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T18:11:11.009Z","updatedAt":"2023-12-07T18:11:11.009Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers reflashed the media player ECU to send arbitrary CAN packets when a particular message arrives over the FM RDS channel.","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"},{"title":"Receive only communication","type":"technique","description":"\n<p>The adversary can use a receive-only communication channel, such as Radio Data System (RDS) or TPMS to send commands to the compromised vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.151Z","mitreId":"T0064","updatedAt":"2023-08-09T13:56:07.892Z","id":"ATM-T0064"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T18:41:52.461Z","updatedAt":"2023-12-07T18:46:04.301Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers compromised the PassThru device by injecting Bourne Shell commands when exploiting the unauthenticated proprietary API of the device.","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"createdAt":"2023-12-07T18:48:10.826Z","updatedAt":"2023-12-07T18:48:10.826Z"},{"type":"procedure","title":"There Will Be Glitches Extracting and Analyzing Automotive Firmware Efficiently","description":"Researchers were able to extract the firmware by performing electromagnetic fault injection to bypass the privilege check for JTAG debug interface.","technique":[{"title":"Hardware fault injection","type":"technique","description":"<p>The adversary may attempt fault injection attacks to elevate privileges by ‘flipping’ bits that control authentication states. For example, through voltage or clock glitching it may be possible to bypass password authentication on debug interfaces. Many different fault injection attacks exist, some require direct physical access to the target ECU and specialized tools (e.g., ChipSHOUTER), while others can be implemented in software (e.g., Row hammer).</p>","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0028","updatedAt":"2024-02-21T14:39:31.150Z","id":"ATM-T0028","lastModifiedAt":"2024-02-21T14:39:31.150Z"},{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"}],"createdAt":"2023-12-07T19:12:46.630Z","updatedAt":"2023-12-07T19:13:02.168Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers were able to hack nearby dongles of other vehicles by reverse engineering exfiltrated firmware and modifying it to create a custom MITM setup.","technique":[{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"}],"createdAt":"2023-12-07T17:48:50.339Z","updatedAt":"2023-12-07T17:48:50.339Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers communicated with a PassThru device (device connecting to OBD-II) by connecting to the local wireless network and exploiting unauthenticated communication between the device and a Windows computer.","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"createdAt":"2023-12-07T18:47:29.795Z","updatedAt":"2023-12-07T18:47:29.795Z"},{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","technique":[],"updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"},{"title":"Denial of service","type":"technique","description":"\n<p>Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Vulnerabilities that cause processes to crash can result in a denial of service.</p><p>Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.</p><p>This technique was adopted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T0814/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0072","technique":[],"updatedAt":"2023-08-09T13:56:07.895Z","id":"ATM-T0072"},{"title":"Hardware fault injection","type":"technique","description":"<p>The adversary may attempt fault injection attacks to elevate privileges by ‘flipping’ bits that control authentication states. For example, through voltage or clock glitching it may be possible to bypass password authentication on debug interfaces. Many different fault injection attacks exist, some require direct physical access to the target ECU and specialized tools (e.g., ChipSHOUTER), while others can be implemented in software (e.g., Row hammer).</p>","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0028","technique":[],"updatedAt":"2024-02-21T14:39:31.150Z","id":"ATM-T0028","lastModifiedAt":"2024-02-21T14:39:31.150Z"},{"title":"Phishing","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1566/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>“Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.</p><p>Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.”</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.159Z","mitreId":"T0015","technique":[],"updatedAt":"2023-08-07T13:56:07.909Z","id":"ATM-T0015"},{"title":"System network configuration discovery","type":"technique","description":"\n<p>Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0099\" rel=\"nofollow\">Arp</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0100\" rel=\"nofollow\">ipconfig</a>/<a class=\"external-link\" href=\"https://attack.mitre.org/software/S0101\" rel=\"nofollow\">ifconfig</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0102\" rel=\"nofollow\">nbtstat</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0103\" rel=\"nofollow\">route</a>.</p><p>Adversaries may use the information from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1016\" rel=\"nofollow\">System Network Configuration Discovery</a> during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.167Z","mitreId":"T0048","technique":[],"updatedAt":"2023-08-09T13:56:07.931Z","id":"ATM-T0048"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"A rogue Wi-Fi hotpot can be used to create the necessary conditions to attempt initial access:\n\n“If we fake this Wi-Fi hotspot and redirect the traffic of QtCarBrowser to our own domain, remotely hacking Tesla cars can be feasible“","mitreId":"T0009","technique":[{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"}],"updatedAt":"2023-08-11T08:13:51.688Z","id":"ATM-T0009"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"The command line interface is used to connect to remote services, execute commands, and run bash scripts.","mitreId":"T0018","technique":[{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"}],"updatedAt":"2023-08-11T08:13:51.585Z","id":"ATM-T0018"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Static credentials hard-coded into the CID’s firmware were used to access the Gateway ECU.","mitreId":"T0040","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:51.821Z","id":"ATM-T0040"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"Physical access to USB/OBD ports can be used to “install the backdoor in the NBT, and then manipulate the vehicle functions through Central Gateway Module.“ (CVE-2018-9314)","mitreId":" ","technique":[{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"}],"updatedAt":"2023-08-11T08:13:52.416Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The researchers were able to access and identify many of the internal compute systems of the vehicle, including Infotainment and Telematics modules, while also identifying the software and some services included on those systems.","mitreId":" ","technique":[{"title":"System information discovery","type":"technique","description":"\n<p>An adversary may attempt to get detailed information about the ECU’s operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1082/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.161Z","mitreId":"T0047","updatedAt":"2023-08-09T13:56:07.916Z","id":"ATM-T0047"}],"updatedAt":"2023-08-11T08:13:53.049Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Researchers noted taking SD card directly out and directly writing own boot.img will cause gateway to execute directly since bootloader does not verify","mitreId":" ","technique":[{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"}],"updatedAt":"2023-08-11T08:13:52.500Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers located the firmware download URL when the status output of a component displayed it","mitreId":" ","technique":[{"title":"System network connections discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</p><p>An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.<a class=\"external-link\" href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://cloud.google.com/vpc/docs/vpc\" rel=\"nofollow\"><sup>[3]</sup></a></p><p>Utilities and commands that acquire this information include netstat, &quot;net use,&quot; and &quot;net session&quot; with Net. In Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to &quot;net session&quot;.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1049/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0049","updatedAt":"2023-08-09T13:56:07.944Z","id":"ATM-T0049"}],"updatedAt":"2023-08-11T08:13:53.868Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to limit the steering wheel movement in Fords Escape by causing a denial-of-service attack on the CAN network and shutting down the Power Steering Control Module","technique":[{"title":"CAN bus denial of service","type":"technique","description":"\n<p>An adversary with access to one of the vehicle’s CAN busses may be able to perform a denial of service attack by flooding the bus with high-priority messages, preventing other ECUs from being able to communicate.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.145Z","mitreId":"T0068","updatedAt":"2023-08-09T13:56:07.873Z","id":"ATM-T0068"}],"createdAt":"2023-12-07T16:10:06.973Z","updatedAt":"2023-12-07T16:10:06.973Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to inject a custom diagnostic packet to shut down the Smart Junction Box (SJB) of Ford Escape to cause an arbitrary device depending on SJB to cease functionality.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:16:15.540Z","updatedAt":"2023-12-07T16:16:15.540Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to spoof messages to a Jeep Cherokee’s Power Steering Control Module by exploiting how the module handled duplicate messages. They exploited the third byte of a CAN message where it was being incremented to create unique CAN messages. By incrementing and sending malicious messages before other ECU’s message arrived, the ECU processed the malicious ones first.","technique":[{"title":"Abuse elevation control mechanism","type":"technique","description":"\n<p>Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Many modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on an ECU. Authorization has to be granted to specific system users or system processes in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1548/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0024","updatedAt":"2023-08-09T13:56:07.798Z","id":"ATM-T0024"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T17:16:59.129Z","updatedAt":"2023-12-07T17:17:12.365Z"},{"type":"procedure","title":"Drive it like you hacked it","description":"Researcher was able to unlock vehicles by using a custom-made device to jam radio signals to prevent the vehicle from receiving signals and copying the original signal to later unlock and steal the car.","technique":[{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"}],"createdAt":"2023-12-07T17:34:08.188Z","updatedAt":"2023-12-07T17:34:08.188Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers were able to exfiltrate arbitrary data files from the vehicle by using a custom tool.","technique":[{"title":"Cellular communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s cellular communication system in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0062","updatedAt":"2023-08-09T13:56:07.839Z","id":"ATM-T0062"}],"createdAt":"2023-12-07T17:49:12.054Z","updatedAt":"2023-12-07T17:49:12.054Z"},{"title":"Persistence","type":"tactic","description":"\n<p>The adversary is trying to maintain their foothold.</p><p>Persistence consists of techniques that adversaries use to keep access to vehicle systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on vehicle systems, such as replacing or hijacking legitimate code or adding startup code.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0003/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.109Z","mitreId":"TA0004","technique":[{"title":"Abuse UDS for persistence","type":"technique","description":"\n<p>The adversary can attempt to use universal diagnostic services to persist their presence on an ECU. For example, UDS' capabilities for firmware updates, writing to an ECU’s memory by address, and ‘download-and-execute’ can be abused by an adversary to achieve persistence.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0020","updatedAt":"2023-08-09T13:56:07.795Z","id":"ATM-T0020"},{"title":"Disable software update","type":"technique","description":"\n<p>The adversary may disable or modify an ECU’s software update mechanism so that it cannot be used to restore the device to an uncompromised state.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.128Z","mitreId":"T0021","updatedAt":"2023-08-09T13:56:07.823Z","id":"ATM-T0021"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Modify TEE","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the ECU’s Trusted Execution Environment (TEE) or other similar isolated execution environment (TrustZone, SMU, CAAM, SE, TPM, EVITA HSM, SHE, SGX, etc.) where the code can evade detection, may persist after device resets, and may not be removable by the device user. Running code within the TEE may provide an adversary with the ability to monitor or tamper with overall device behavior.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1399/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.147Z","mitreId":"T0023","updatedAt":"2023-08-09T13:56:07.880Z","id":"ATM-T0023"}],"updatedAt":"2023-08-09T13:55:03.170Z","id":"ATM-TA0004"},{"title":"Lateral movement","type":"tactic","description":"\n<p>The adversary is trying to move through the vehicle network.</p><p>Lateral movement consists of techniques that enable an adversary to access and control remote systems on a vehicle network and could, but does not necessarily, include execution of tools on ECUs. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool.</p><p>This definition was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0033/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.113Z","mitreId":"TA0009","technique":[{"title":"Abuse UDS for lateral movement","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to move laterally inside the vehicle network. For example, an adversary that can send diagnostic commands could attempt to use UDS ‘download and execute’ or ‘write memory by address’ capabilities to gain code execution on an ECU on the vehicle network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0050","updatedAt":"2023-08-09T13:56:07.810Z","id":"ATM-T0050"},{"title":"Bridge vehicle networks","type":"technique","description":"\n<p>The adversary may seek to bridge vehicle vehicle networks to obtain their objectives.</p><p>Some ECUs may possess multiple interfaces to the vehicle network, including interfaces that use different networking technologies, and an adversary could modify these ECUs to bridge networks that would otherwise be separated.</p><p>For example, an adversary that has gained initial access on an ECU with a connection to a vehicle’s Ethernet network may attempt to modify an ECU that is connected to the vehicle’s Ethernet and CAN networks so that they can extend their reach to ECU on the vehicle’s CAN network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.132Z","mitreId":"T0051","updatedAt":"2023-08-09T13:56:07.835Z","id":"ATM-T0051"},{"title":"Exploit ECU for lateral movement","type":"technique","description":"\n<p>Adversaries may exploit an ECU’s services to gain unauthorized access to internal systems once inside of a vehicle network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable control of additional ECUs on the vehicle network.</p><p>An adversary may need to determine if the remote system is in a vulnerable state, which may be done through network service scanning or other discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation.</p><p>Depending on the permissions level of the vulnerable remote service an adversary may achieve exploitation for privilege escalation as a result of lateral movement exploitation as well.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1210/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.143Z","mitreId":"T0052","updatedAt":"2023-08-09T13:56:07.864Z","id":"ATM-T0052"},{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"}],"updatedAt":"2023-08-09T13:55:03.196Z","id":"ATM-TA0009"},{"title":"Exfiltration","type":"tactic","description":"\n<p>The adversary is trying to steal data.</p><p>Exfiltration consists of techniques that adversaries may use to steal data from the vehicle. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission. Depending on a vehicle’s connectivity features, it may be possible to exfiltrate over channels that do not use internet communication, such as Bluetooth or Wi-Fi.</p><p>This tactic was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0010/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.115Z","mitreId":"TA0012","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Cellular communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s cellular communication system in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0062","updatedAt":"2023-08-09T13:56:07.839Z","id":"ATM-T0062"},{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"},{"title":"Removable media","type":"technique","description":"\n<p>Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1052/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0006","updatedAt":"2023-08-09T13:56:07.893Z","id":"ATM-T0006"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"},{"title":"Standard cryptographic protocol","type":"technique","description":"\n<p>Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1573/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.163Z","mitreId":"T0066","updatedAt":"2023-08-09T13:56:07.981Z","id":"ATM-T0066"}],"updatedAt":"2023-08-09T13:55:03.251Z","id":"ATM-TA0012"},{"title":"Native API","type":"technique","description":"\n<p>Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.</p><p>Functionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.</p><p>Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.</p><p>Adversaries may abuse these native API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1106/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.128Z","mitreId":"T0019","technique":[],"updatedAt":"2023-08-09T13:56:07.821Z","id":"ATM-T0019"},{"title":"Removable media","type":"technique","description":"\n<p>Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1052/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0006","technique":[],"updatedAt":"2023-08-09T13:56:07.893Z","id":"ATM-T0006"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Persistance is achieved by modifying the ECU’s software: “By using those techniques to skip the update verification progress and programming our customized code into ECUs, we can now run our code permanently on the ECU if we want.“","mitreId":"T0022","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"updatedAt":"2023-08-11T08:13:51.616Z","id":"ATM-T0022"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"Vehicle update services will monitor the contents of a connected USB dongle. If the dongle contains certain content, the vehicle will believe an update is occurring, allowing the exploitation of some vulnerabilities:\n\n“Some content is signed by BMW private keys, while some are not, which gives us a chance to prepare our malformed content in the USB stick and leverage some vulnerabilities existed in the update service to gain control of hu-intel system with root privilege.“","mitreId":" ","technique":[{"title":"Exploit OS vulnerability","type":"technique","description":"\n<p>A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1404/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.138Z","mitreId":"T0026","updatedAt":"2023-08-09T13:56:07.958Z","id":"ATM-T0026"}],"updatedAt":"2023-08-11T08:13:52.076Z","id":""},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"An attacker researches the Multi Sensor Fusion system on a specific AV model to identify weaknesses. The attacker rides in AV or follows the AV at close known range.","mitreId":"T0010","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"updatedAt":"2023-08-11T08:13:53.370Z","id":"ATM-T0010"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to bypass Authentication in Toyota Prius by locating a few ECU secrets in the Toyota Calibration Update Wizard, which is a service tool, and using the secrets to generate their own keys","technique":[{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"},{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"createdAt":"2023-12-07T16:33:54.572Z","updatedAt":"2023-12-07T16:34:19.560Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers used the Techstream software and a J2534 pass-thru device to send diagnostic packets to a Toyota Prius and trigger the solenoids of the Anti-Lock Braking System and Electronically-Controlled Braking System","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:34:56.711Z","updatedAt":"2023-12-07T16:35:20.540Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected arbitrary CAN packets by exploiting the media player’s CD data reflashing logic and overwritten function pointers. They burned a malicious WMA audio file onto a CD which sent the CAN packets when played.","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T18:40:47.457Z","updatedAt":"2023-12-07T18:41:28.530Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to control the turn signals, door locks, and tachometer of a Jeep Cherokee by manipulating the CAN messages through SPI communication to the Uconnect system.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-08T15:24:55.157Z","updatedAt":"2023-12-08T15:24:55.157Z"},{"title":"Credential access","type":"tactic","description":"\n<p>The adversary is trying to steal vehicle network credentials.</p><p>Credential Access consists of techniques for stealing vehicle network credentials like cryptographic tokens, keys, and passwords. Techniques used to get credentials include credential dumping and collecting unsecured credentials stored on ECU file systems. Using legitimate credentials can give adversaries access to vehicle systems and make them harder to detect.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0006/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.112Z","mitreId":"TA0007","technique":[{"title":"Capture SMS message","type":"technique","description":"\n<p>A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.</p><p>On Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.</p><p>This technique description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1412/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0035","updatedAt":"2023-08-09T13:56:07.804Z","id":"ATM-T0035"},{"title":"Exploit TEE vulnerability","type":"technique","description":"\n<p>A malicious app or other attack vector could be used to exploit vulnerabilities in code running within a Trusted Execution Environment (TEE) <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/thomas-holmes\" rel=\"nofollow\">[1]</a></sup>, which could include ARM TrustZone, SEs, TPMs, EVITA HSMs, SHEs, SPUs, CAAMs, or similar. The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data <sup><a class=\"external-link\" href=\"https://bits-please.blogspot.in/2016/06/extracting-qualcomms-keymaster-keys.html\" rel=\"nofollow\">[2]</a></sup>. Escalated operating system privileges may be first required in order to have the ability to attack the TEE <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/ekberg\" rel=\"nofollow\">[3]</a></sup>. If not, privileges within the TEE can potentially be used to exploit the operating system <sup><a class=\"external-link\" href=\"http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html\" rel=\"nofollow\">[4]</a></sup>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1405/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.130Z","mitreId":"T0027","updatedAt":"2023-08-09T13:56:07.829Z","id":"ATM-T0027"},{"title":"Input capture","type":"technique","description":"\n<p>Adversaries may capture user input to obtain credentials or other information from the user through various methods.</p><p>Malware may masquerade as a legitimate third-party keyboard to record user keystrokes.<sup><a class=\"external-link\" href=\"https://zeltser.com/third-party-keyboards-security/\" rel=\"nofollow\">[1]</a></sup> On Android, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.</p><p>On Android, malware may abuse accessibility features to record keystrokes by registering an <code>AccessibilityService</code> class, overriding the <code>onAccessibilityEvent</code> method, and listening for the <code>AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED</code> event type. The event object passed into the function will contain the data that the user typed.</p><p>Additional methods of keylogging may be possible if root access is available.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1417/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.141Z","mitreId":"T0036","updatedAt":"2023-08-09T13:56:07.860Z","id":"ATM-T0036"},{"title":"Input prompt","type":"technique","description":"\n<p>The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.</p><p>Compared to traditional PCs, the constrained display size of vehicle screens may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.<a class=\"external-link\" href=\"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\" rel=\"nofollow\"><sup>[1]</sup></a></p><p>Specific approaches to this technique include:</p><h3 id=\"Inputprompt-Impersonatetheidentityofalegitimateapplication\">Impersonate the identity of a legitimate application</h3><p>A malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the vehicle. The malicious app could then prompt the user for sensitive information.<a class=\"external-link\" href=\"https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/\" rel=\"nofollow\"><sup>[2]</sup></a></p><h3 id=\"Inputprompt-Displayapromptontopofarunninglegitimateapplication\">Display a prompt on top of a running legitimate application</h3><p>A malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the <code>ActivityManager</code> API.<a class=\"external-link\" href=\"https://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks%28int%29\" rel=\"nofollow\"><sup>[3]</sup></a><a class=\"external-link\" href=\"http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag\" rel=\"nofollow\"><sup>[4]</sup></a>. A malicious application can still abuse Android’s accessibility features to determine which application is currently in the foreground.<a class=\"external-link\" href=\"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\" rel=\"nofollow\"><sup>[5]</sup></a> Approaches to display a prompt include:</p><ul><li><p>A malicious application could start a new activity on top of a running legitimate application.<a class=\"external-link\" href=\"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://conference.hitb.org/hitbsecconf2011kul/materials/D1T1%20-%20Riley%20Hassell%20-%20Exploiting%20Androids%20for%20Fun%20and%20Profit.pdf\" rel=\"nofollow\"><sup>[6]</sup></a> Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.<a class=\"external-link\" href=\"https://developer.android.com/guide/components/activities/background-starts\" rel=\"nofollow\"><sup>[7]</sup></a></p></li><li><p>A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the <code>SYSTEM_ALERT_WINDOW</code> permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store.<a class=\"external-link\" href=\"http://cloak-and-dagger.org/\" rel=\"nofollow\"><sup>[8]</sup></a><a class=\"external-link\" href=\"https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/\" rel=\"nofollow\"><sup>[9]</sup></a><a class=\"external-link\" href=\"https://www.skycure.com/blog/accessibility-clickjacking/\" rel=\"nofollow\"><sup>[10]</sup></a> The <code>SYSTEM_ALERT_WINDOW</code> permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.<a class=\"external-link\" href=\"https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/\" rel=\"nofollow\"><sup>[11]</sup></a></p></li></ul><h3 id=\"Inputprompt-Fakedevicenotifications\">Fake device notifications</h3><p>A malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.<a class=\"external-link\" href=\"https://www.group-ib.com/blog/gustuff\" rel=\"nofollow\"><sup><u>[12]</u></sup></a></p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1411/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0037","updatedAt":"2023-08-09T13:56:07.885Z","id":"ATM-T0037"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"},{"title":"OS credential dumping","type":"technique","description":"\n<p>Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0008\" rel=\"nofollow\">Lateral Movement</a> and access restricted information.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1003/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.160Z","mitreId":"T0039","updatedAt":"2023-08-09T13:56:07.913Z","id":"ATM-T0039"},{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"},{"title":"URI Hijacking","type":"technique","description":"\n<p>Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.</p><p>Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.<a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/ios-url-scheme-susceptible-to-hijacking/\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://tools.ietf.org/html/rfc7636\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>This technique description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1416/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.169Z","mitreId":"T0041","updatedAt":"2023-08-09T13:56:07.943Z","id":"ATM-T0041"}],"updatedAt":"2023-08-09T13:55:03.182Z","id":"ATM-TA0007"},{"title":"Location tracking","type":"technique","description":"<p>An adversary could use a malicious or exploited application to surreptitiously track the vehicle’s physical location through use of standard operating system APIs.</p><p>This technique’s description was adapted from <a href=\"https://attack.mitre.org/techniques/T1430/\">MITRE ATT&amp;CK</a>.</p>","createdAt":"2023-08-09T09:51:19.131Z","mitreId":"T0043","technique":[],"updatedAt":"2024-03-19T18:50:19.658Z","id":"ATM-T0043","lastModifiedAt":"2024-03-19T18:50:19.657Z"},{"title":"Bridge vehicle networks","type":"technique","description":"\n<p>The adversary may seek to bridge vehicle vehicle networks to obtain their objectives.</p><p>Some ECUs may possess multiple interfaces to the vehicle network, including interfaces that use different networking technologies, and an adversary could modify these ECUs to bridge networks that would otherwise be separated.</p><p>For example, an adversary that has gained initial access on an ECU with a connection to a vehicle’s Ethernet network may attempt to modify an ECU that is connected to the vehicle’s Ethernet and CAN networks so that they can extend their reach to ECU on the vehicle’s CAN network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.132Z","mitreId":"T0051","technique":[],"updatedAt":"2023-08-09T13:56:07.835Z","id":"ATM-T0051"},{"title":"Cellular communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s cellular communication system in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0062","technique":[],"updatedAt":"2023-08-09T13:56:07.839Z","id":"ATM-T0062"},{"title":"Network service scanning","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of services running on a vehicle’s ECUs, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1046/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.142Z","mitreId":"T0044","technique":[],"updatedAt":"2023-08-09T13:56:07.862Z","id":"ATM-T0044"},{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","technique":[],"updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"},{"title":"Modify bus message","type":"technique","description":"\n<p>An adversary that has gained access to one of the vehicle’s communication busses may try to modify or suppress messages sent by another ECU on that network. This technique particularly applicable to CAN busses, but is not necessarily limited to that technology.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.163Z","mitreId":"T0070","technique":[],"updatedAt":"2023-08-09T13:56:07.921Z","id":"ATM-T0070"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Telnet is used for lateral movement from the compromised ‘CID’ to the ‘Parrot’ ECU.","mitreId":"T0053","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:51.843Z","id":"ATM-T0053"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"A rogue cellular base station can be used to create the necessary conditions to attempt initial access","mitreId":" ","technique":[{"title":"Rogue cellular base station","type":"technique","description":"\n<p>An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate the vehicle cellular interface’s communication. A compromised cellular femtocell could be used to carry out this technique<a class=\"external-link\" href=\"http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1467/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.164Z","mitreId":"T0008","updatedAt":"2023-08-09T13:56:07.922Z","id":"ATM-T0008"}],"updatedAt":"2023-08-11T08:13:52.358Z","id":""},{"title":"Drift with Devil: Security of Multi-Sensor Fusion based Localization in High-Level Autonomous Driving under GPS Spoofing","type":"procedure","description":"The attacker utilizing an AV and sensing systems to accurately measure distance of vehicle from lane map edges as well as range to AV so that they may calculate spoofed coordinates close enough to actual that they are not thrown out by the AV MSF system initiates an attack during a period of known MSF calculation weakness for which the GPS signal will be predominant in the calculation of location.","mitreId":"T0010","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"updatedAt":"2023-08-11T08:13:52.286Z","id":"ATM-T0010"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Security researchers used the compromised ECUs' functions to choreograph their own “Easter egg”: “we also reversed and then customized the body control ECUs to play the Model X \"Holiday Show\" Easter Egg for fun“","mitreId":" ","technique":[{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"updatedAt":"2023-08-11T08:13:52.843Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers can remotely spawn a root shell in a component by using remote code execution to automatically connect the component to a Wi-Fi hotspot","mitreId":" ","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"},{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"}],"updatedAt":"2023-08-11T08:13:53.178Z","id":""},{"title":"Security and Privacy Vulnerabilities of In-Car Wireless Networks: A Tire Pressure Monitoring System Case Study","type":"procedure","description":"Researchers were able affect the tire pressure values displayed in the dashboard by spoofing TPMS messages using a custom packet generator and a custom Universal Software Radio Peripheral.","mitreId":" ","technique":[{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"}],"updatedAt":"2023-08-11T08:13:53.941Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to bypass authentication against the Ford Parking Assist Module by replaying the seed responses as the ECU sends","technique":[{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"}],"createdAt":"2023-12-07T16:13:26.025Z","updatedAt":"2023-12-07T16:13:26.025Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to engage the brakes and make the accelerator padlocked in a Ford Escape that is not moving by injecting a custom diagnostic packet into the CAN bus. DiagnosticCommand 003C service was exploited.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:13:59.464Z","updatedAt":"2023-12-07T16:13:59.464Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to lock the parking brake indefinitely to engage by engaging the parking brake while the car is stationary, then forcing the Electronic Parking Module into Bootrom.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T17:22:00.297Z","updatedAt":"2023-12-07T17:22:00.297Z"},{"type":"procedure","title":"Driving down the rabbit hole","description":"Researchers exploited a buffer overflow vulnerability and also confirmed the attack works remotely.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T17:38:19.510Z","updatedAt":"2023-12-07T17:38:19.510Z"},{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","technique":[],"updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"},{"title":"Abuse UDS for lateral movement","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to move laterally inside the vehicle network. For example, an adversary that can send diagnostic commands could attempt to use UDS ‘download and execute’ or ‘write memory by address’ capabilities to gain code execution on an ECU on the vehicle network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0050","technique":[],"updatedAt":"2023-08-09T13:56:07.810Z","id":"ATM-T0050"},{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","technique":[],"updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"},{"title":"System network connections discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</p><p>An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.<a class=\"external-link\" href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://cloud.google.com/vpc/docs/vpc\" rel=\"nofollow\"><sup>[3]</sup></a></p><p>Utilities and commands that acquire this information include netstat, &quot;net use,&quot; and &quot;net session&quot; with Net. In Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to &quot;net session&quot;.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1049/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0049","technique":[],"updatedAt":"2023-08-09T13:56:07.944Z","id":"ATM-T0049"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"A WebKit exploit for CVE-2011-3928 is used to gain initial access.","mitreId":"T0011","technique":[{"title":"Browser compromise","type":"technique","description":"\n<p>Based on <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1456/\" rel=\"nofollow\">MITRE ATT&amp;CK’s ‘Drive-by Compromise’ technique</a>, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability.","createdAt":"2023-08-09T09:51:19.127Z","mitreId":"T0011","updatedAt":"2023-08-09T13:56:07.918Z","id":"ATM-T0011"}],"updatedAt":"2023-08-11T08:13:51.753Z","id":"ATM-T0011"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Telnet is used for lateral movement from the compromised ‘CID’ to the Gateway ECU.","mitreId":"T0053","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:51.862Z","id":"ATM-T0053"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"Code signing was bypassed by the researchers via discovered vulnerabilities:\n\n“After reverse-engineering the diagnose protocol between Central Gateway and NBT, we found the vulnerability that can be utilized to bypass the code sign mechanism…“\n\n“…we also found a memory corruption vulnerability that allows us to bypass the signature protection and achieve remote code execution in the firmware.“","mitreId":" ","technique":[{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"}],"updatedAt":"2023-08-11T08:13:52.106Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"The security researchers used ECU reprogramming functions to move laterally to the CID device and body controllers (BC CEN and BC FRONT): “Before we decide to patch the body control ECUs, we should find a way to flash the ECUs. Fortunately, by using the vulnerability mentioned before, we can bypass the signature check in the gateway to program our custom firmware to those body control ECUs“.","mitreId":" ","technique":[{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"}],"updatedAt":"2023-08-11T08:13:52.791Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Wi-Fi credentials for the Tesla Service Wi-Fi network were discovered: “The Tesla Service Wi-Fi network used in service centers used a permanent, static WPA key that is contained in one of the binaries in the firmware“","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:52.928Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers could cause components to execute diagnostic functions via unauthorized diagnostic CAN messages through another compromised component","mitreId":" ","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"updatedAt":"2023-08-11T08:13:53.016Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed diagnostic test packets in Toyota Prius that locked the doors and prevented it being opened from the inside","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:37:44.282Z","updatedAt":"2023-12-07T16:37:44.282Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to write arbitrary CAN packets taking control of telematics unit could then take control of other ECUs in the Ford Escapes CAN bus","technique":[{"title":"Abuse UDS for lateral movement","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to move laterally inside the vehicle network. For example, an adversary that can send diagnostic commands could attempt to use UDS ‘download and execute’ or ‘write memory by address’ capabilities to gain code execution on an ECU on the vehicle network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0050","updatedAt":"2023-08-09T13:56:07.810Z","id":"ATM-T0050"}],"createdAt":"2023-12-07T16:39:53.247Z","updatedAt":"2023-12-07T16:39:53.247Z"},{"type":"procedure","title":"Drive it like you hacked it","description":"Researcher intercepted login requests from RemoteLink, a mobile app for users to perform actions to a vehicle and retrieved credentials by using a custom-made device to set up a fake access point and performing an SSL MITM attack.","technique":[{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"},{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"createdAt":"2023-12-07T17:26:38.171Z","updatedAt":"2023-12-07T17:31:09.670Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"By having physical access to the OBD-II port, the researchers were able to directly access all ECUs connected to low and high-speed CAN networks, allowing for firmware modification and installation of other malicious software.","technique":[{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"}],"createdAt":"2023-12-07T18:00:41.041Z","updatedAt":"2023-12-07T18:00:41.041Z"},{"type":"procedure","title":"NFC RELAY ATTACK ON TESLA MODEL Y","description":"Researchers unlocked the vehicle by relaying NFC communications over Bluetooth/Wi-Fi using a modified “Proxmark RDV4.0” device to handle the low-level NFC protocol for relay attack They modified the Proxmark to respond to the vehicle with correct ID to initiate challenge-response, relayed the challenge to a smartphone (or any NFC device) near the victim’s card, relayed the challenge to the victim’s card, relayed the response back through the smartphone to the Proxmark, and then relayed to the vehicle to unlock.","technique":[{"title":"Relay communications","type":"technique","description":"\n<p>The adversary may be able to relay communications to make a device that the vehicle trusts appear closer to the vehicle than it really is. An example of this technique is the use of a key fob relay attack, which a car thief could use to unlock, start, and drive away with a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0007","updatedAt":"2023-08-09T13:56:07.908Z","id":"ATM-T0007"}],"createdAt":"2023-12-07T18:18:39.330Z","updatedAt":"2023-12-07T18:18:39.330Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected, through Bluetooth malicious code to persistently pair with a malicious MAC address and accept remote commands post compromise.","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:50:22.105Z","updatedAt":"2023-12-07T18:50:49.068Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected CAN packets remotely through the compromised telematics unit by using the telematics exploit to run malicious IRC code that communicates with a malicious IRC server sending commands.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T18:53:46.345Z","updatedAt":"2023-12-07T18:53:46.345Z"},{"type":"procedure","title":"Exploiting Wi-Fi Stack on Tesla Model S","description":"Researchers were able to pivot from the Wi-Fi chip to the host system by taking advantage of a vulnerability in the host’s kernel: “The vulnerability in kernel driver can be trigger by sending data from chip through SDIO interface.“","technique":[{"title":"Exploit co located computing device for privilege escalation","type":"technique","description":"\n<p>Adversaries may be able to leverage their access on one of an ECU’s computing devices to gain control of another computing device on the same ECU. For example, it may be possible for a compromised USB controller or Wi-Fi/Bluetooth chip to gain control of the operating system running on a separate chip but still part of the same ECU.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.129Z","mitreId":"T0025","updatedAt":"2023-08-09T13:56:07.825Z","id":"ATM-T0025"}],"createdAt":"2023-12-07T17:42:36.309Z","updatedAt":"2023-12-07T17:42:36.309Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers were able to read file names, server path, port, version, and other information of unencrypted OTA updates from the GSM Modem by using a logic analyzer, a Python script, and Wireshark.","technique":[{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"createdAt":"2023-12-07T17:46:52.522Z","updatedAt":"2023-12-07T17:46:52.522Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to turn the steering wheel of a Jeep Cherokee by first starting a diagnostic session with the Parking Assist Module (PAM) at low speeds and then sending CAN messages to the power steering ECU to turn the wheel. The diagnostic session with the PAM stopped real CAN messages being sent so that the researchers could send their own.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T17:57:28.759Z","updatedAt":"2023-12-07T17:57:36.498Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"Radio and other telematics-related interfaces were used to gain initial access: “In our car we identified no fewer than five kinds of digital radio interfaces accepting outside input, some over only a short range and others over indefinite distance…We have developed the ability to remotely compromise key ECUs in our car via externally-facing vulnerabilities.“","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:00:21.502Z","updatedAt":"2023-12-07T18:00:21.502Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The telematics modules or any other ECU can be modified to include malicious code that allows for persistence of attack.","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"createdAt":"2023-12-07T18:00:58.711Z","updatedAt":"2023-12-07T18:00:58.711Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers found that the aqLink protocol supported larger packet sizes than used in the custom code related to the Command protocol. They can exploit a buffer overflow from this vulnerability.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:51:26.619Z","updatedAt":"2023-12-07T18:51:26.619Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers forced the telematics unit to download and execute arbitrary payload from the internet by exploiting the call authentication and buffer overflow vulnerabilities.","technique":[{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"createdAt":"2023-12-07T18:52:12.620Z","updatedAt":"2023-12-07T18:53:22.701Z"},{"title":"Execution","type":"tactic","description":"\n<p>The adversary is trying to run malicious code.</p><p>Execution consists of techniques that result in adversary-controlled code running on an ECU. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like moving laterally in a vehicle network or affecting vehicle functions.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0041/\" rel=\"nofollow\">MITRE ATT&amp;CK for mobile</a>.","createdAt":"2023-08-09T09:51:19.108Z","mitreId":"TA0003","technique":[{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"},{"title":"Native API","type":"technique","description":"\n<p>Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.</p><p>Functionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.</p><p>Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.</p><p>Adversaries may abuse these native API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1106/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.128Z","mitreId":"T0019","updatedAt":"2023-08-09T13:56:07.821Z","id":"ATM-T0019"}],"updatedAt":"2023-08-09T13:55:03.164Z","id":"ATM-TA0003"},{"title":"Disable software update","type":"technique","description":"\n<p>The adversary may disable or modify an ECU’s software update mechanism so that it cannot be used to restore the device to an uncompromised state.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.128Z","mitreId":"T0021","technique":[],"updatedAt":"2023-08-09T13:56:07.823Z","id":"ATM-T0021"},{"title":"Access vehicle telemetry","type":"technique","description":"\n<p>Adversaries may try to collect vehicle telemetry, including propulsion system status (e.g., hard acceleration or braking), whether vehicle enclosures are locked / unlocked, etc.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0057","technique":[],"updatedAt":"2023-08-09T13:56:07.964Z","id":"ATM-T0057"},{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","technique":[],"updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"},{"title":"Supply chain compromise","type":"technique","description":"\n<p>Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.</p><p>Supply chain compromise can take place at any stage of the supply chain including:</p><ul><li><p>Manipulation of development tools</p></li><li><p>Manipulation of a development environment</p></li><li><p>Manipulation of source code repositories (public or private)</p></li><li><p>Manipulation of source code in open-source dependencies</p></li><li><p>Manipulation of software update/distribution mechanisms</p></li><li><p>Compromised/infected system images (multiple cases of removable media infected at the factory) </p></li><li><p>Replacement of legitimate software with modified versions</p></li><li><p>Sales of modified/counterfeit products to legitimate distributors</p></li><li><p>Shipment interdiction</p></li></ul><p>While supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.  Targeting may be specific to a desired victim set  or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. </p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1195/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.169Z","mitreId":"T0017","technique":[],"updatedAt":"2023-08-09T13:56:07.940Z","id":"ATM-T0017"},{"title":"Network information discovery","type":"technique","description":"\n<p>Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1507/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0060","technique":[],"updatedAt":"2023-08-09T13:56:07.946Z","id":"ATM-T0060"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"SSH is used for lateral movement from the compromised ‘CID’ to the ‘IC' ECU.","mitreId":"T0053","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:51.835Z","id":"ATM-T0053"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"UDS messages were sent to the electronic stability program (ESP) to put it into a diagnostic programming session, impacting steering and braking.","mitreId":"T0067","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"updatedAt":"2023-08-11T08:13:51.906Z","id":"ATM-T0067"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The researchers have “been able to gain control of the CAN buses with the execution of arbitrary, unauthorized diagnostic requests of BMW in-car systems remotely.“","mitreId":" ","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-11T08:13:52.246Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Researchers exploited a kernel vulnerability to bypass AppArmor mandatory access control: “In our exploit, we patched aa_g_profile_mode with APPARMOR_COMPLAIN in the kernel to disable AppArmor, we also patched syscall setresuid(), so any process can setresuid() to root.”","mitreId":" ","technique":[{"title":"Exploit OS vulnerability","type":"technique","description":"\n<p>A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1404/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.138Z","mitreId":"T0026","updatedAt":"2023-08-09T13:56:07.958Z","id":"ATM-T0026"}],"updatedAt":"2023-08-11T08:13:52.613Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Lateral movement from the compromised “CID” device to the vehicle gateway was possible by accessing remote services: “port 3500 on the gateway is acting as the command port. In the version being tested by us, the following commands are available: \\x12\\x01: Open a shell at port 23, with hard-coded password \"1q3e5t7u\". \\x00: Reboot, \\x08: Reboot for update.”","mitreId":" ","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:52.508Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Persistence on the vehicle could be accomplished by modifying ECU firmware: “(…) the ECU itself have no secure boot mechanism, and even does not check firmware’s signature, except for a CRC checksum. That means nothing can stop us from programming the ECU after bypassed the only check in Gateway.“","mitreId":" ","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"updatedAt":"2023-08-11T08:13:52.693Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers used a web browser vulnerability to make the browser crash.","mitreId":" ","technique":[{"title":"Browser compromise","type":"technique","description":"\n<p>Based on <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1456/\" rel=\"nofollow\">MITRE ATT&amp;CK’s ‘Drive-by Compromise’ technique</a>, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability.","createdAt":"2023-08-09T09:51:19.127Z","mitreId":"T0011","updatedAt":"2023-08-09T13:56:07.918Z","id":"ATM-T0011"},{"title":"Denial of service","type":"technique","description":"\n<p>Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Vulnerabilities that cause processes to crash can result in a denial of service.</p><p>Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.</p><p>This technique was adopted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T0814/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0072","updatedAt":"2023-08-09T13:56:07.895Z","id":"ATM-T0072"}],"updatedAt":"2023-12-08T16:21:46.349Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers gained root access to the main infotainment systems by accessing a component, observing a security token being sent in plain text after being updated every 24 hours.","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:53.013Z","id":""},{"title":"Security and Privacy Vulnerabilities of In-Car Wireless Networks: A Tire Pressure Monitoring System Case Study","type":"procedure","description":"Researchers were able to crash and disable the TPMS ECU after repeatedly triggering the TPMS warning on and off over 2 days of experiments.","mitreId":" ","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"},{"title":"Denial of service","type":"technique","description":"\n<p>Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Vulnerabilities that cause processes to crash can result in a denial of service.</p><p>Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.</p><p>This technique was adopted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T0814/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0072","updatedAt":"2023-08-09T13:56:07.895Z","id":"ATM-T0072"}],"updatedAt":"2023-12-07T18:32:39.211Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers flooded CAN packets to the servo device in a Toyota Prius, which can move the steering wheel, to cause wheel movement at arbitrary speeds","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:12:52.451Z","updatedAt":"2023-12-07T16:12:52.451Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed the diagnostic test packet in a Toyota Prius that can turn the horn on and off.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:37:13.192Z","updatedAt":"2023-12-07T16:37:13.192Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility to bypass message confliction and send diagnostic messages at arbitrary vehicle speeds by putting the ECU into Bootrom mode.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Denial of service","type":"technique","description":"\n<p>Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Vulnerabilities that cause processes to crash can result in a denial of service.</p><p>Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.</p><p>This technique was adopted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T0814/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0072","updatedAt":"2023-08-09T13:56:07.895Z","id":"ATM-T0072"}],"createdAt":"2023-12-07T16:47:34.821Z","updatedAt":"2023-12-07T16:48:27.811Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers demonstrated they can control the steering at higher speeds indefinitely by putting the Parking Assist Module in Bootrom mode, modifying data, and downloading new firmware.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:59:21.434Z","updatedAt":"2023-12-07T17:12:17.182Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"A laptop plugged into the OBD-II port of the vehicle was used to gain initial access for the execution of attacks by using the researchers' custom CAN analysis and modification tool. Other aftermarket equipment containing malicious software can be installed in the vehicle to introduce a mode of access to execute attacks.","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"createdAt":"2023-12-07T17:59:49.488Z","updatedAt":"2023-12-07T17:59:49.488Z"},{"title":"Privilege escalation","type":"tactic","description":"\n<p>The adversary is trying to gain higher-level permissions.</p><p>Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on an ECU. Adversaries can often gain initial access to an ECU with unprivileged access but require elevated permissions or capabilities to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include:</p><ul><li><p>root access</p></li><li><p>control of adjacent computing environments on the same ECU</p></li></ul><p>These techniques can overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0004/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.110Z","mitreId":"TA0005","technique":[{"title":"Abuse elevation control mechanism","type":"technique","description":"\n<p>Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Many modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on an ECU. Authorization has to be granted to specific system users or system processes in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1548/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0024","updatedAt":"2023-08-09T13:56:07.798Z","id":"ATM-T0024"},{"title":"Exploit co located computing device for privilege escalation","type":"technique","description":"\n<p>Adversaries may be able to leverage their access on one of an ECU’s computing devices to gain control of another computing device on the same ECU. For example, it may be possible for a compromised USB controller or Wi-Fi/Bluetooth chip to gain control of the operating system running on a separate chip but still part of the same ECU.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.129Z","mitreId":"T0025","updatedAt":"2023-08-09T13:56:07.825Z","id":"ATM-T0025"},{"title":"Exploit OS vulnerability","type":"technique","description":"\n<p>A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1404/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.138Z","mitreId":"T0026","updatedAt":"2023-08-09T13:56:07.958Z","id":"ATM-T0026"},{"title":"Exploit TEE vulnerability","type":"technique","description":"\n<p>A malicious app or other attack vector could be used to exploit vulnerabilities in code running within a Trusted Execution Environment (TEE) <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/thomas-holmes\" rel=\"nofollow\">[1]</a></sup>, which could include ARM TrustZone, SEs, TPMs, EVITA HSMs, SHEs, SPUs, CAAMs, or similar. The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data <sup><a class=\"external-link\" href=\"https://bits-please.blogspot.in/2016/06/extracting-qualcomms-keymaster-keys.html\" rel=\"nofollow\">[2]</a></sup>. Escalated operating system privileges may be first required in order to have the ability to attack the TEE <sup><a class=\"external-link\" href=\"https://usmile.at/symposium/program/2015/ekberg\" rel=\"nofollow\">[3]</a></sup>. If not, privileges within the TEE can potentially be used to exploit the operating system <sup><a class=\"external-link\" href=\"http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html\" rel=\"nofollow\">[4]</a></sup>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1405/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.130Z","mitreId":"T0027","updatedAt":"2023-08-09T13:56:07.829Z","id":"ATM-T0027"},{"title":"Hardware fault injection","type":"technique","description":"<p>The adversary may attempt fault injection attacks to elevate privileges by ‘flipping’ bits that control authentication states. For example, through voltage or clock glitching it may be possible to bypass password authentication on debug interfaces. Many different fault injection attacks exist, some require direct physical access to the target ECU and specialized tools (e.g., ChipSHOUTER), while others can be implemented in software (e.g., Row hammer).</p>","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0028","updatedAt":"2024-02-21T14:39:31.150Z","id":"ATM-T0028","lastModifiedAt":"2024-02-21T14:39:31.150Z"},{"title":"Process injection","type":"technique","description":"\n<p>Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.</p><p>There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific.</p><p>More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1055/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.159Z","mitreId":"T0029","updatedAt":"2023-08-09T13:56:07.911Z","id":"ATM-T0029"},{"title":"Reprogram co located computing device for privilege escalation","type":"technique","description":"\n<p>The adversary may attempt to elevate privileges by using their access on one of the ECU’s computing devices to reprogram another computing device on the same ECU. For example, if an ECU that uses a system-on-chip for most tasks and a separate microcontroller for communication on the vehicle’s CAN network, an adversary that can execute code on the SoC could attempt to reprogram the CAN microcontroller.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0030","updatedAt":"2023-08-09T13:56:07.926Z","id":"ATM-T0030"}],"updatedAt":"2023-08-09T13:55:03.174Z","id":"ATM-TA0005"},{"title":"Defense evasion","type":"tactic","description":"\n<p>The adversary is trying to avoid or bypass security controls.</p><p>Defense Evasion consists of techniques that adversaries use to advance their objectives despite the presence of defensive measures. This tactic is different from MITRE ATT&amp;CK’s ‘defense evasion’, which is squarely focused on avoiding detection.","createdAt":"2023-08-09T09:51:19.111Z","mitreId":"TA0006","technique":[{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"},{"title":"Disable firewall","type":"technique","description":"\n<p>Adversaries may disable or modify ECU firewalls in order to bypass controls limiting vehicle network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line.</p><p>Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1562/004/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.130Z","mitreId":"T0032","updatedAt":"2023-08-09T13:56:07.827Z","id":"ATM-T0032"},{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"},{"title":"Bypass mandatory access control","type":"technique","description":"\n<p>Adversaries may find ways to defeat mandatory access control mechanisms such as SELinux or AppArmor. This could include finding a ‘hole’ in the policy, or exploiting a vulnerability in the operating system, kernel, or trusted execution environment that allows the adversary to disable mandatory access control.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0034","updatedAt":"2023-08-09T13:56:07.882Z","id":"ATM-T0034"}],"updatedAt":"2023-08-09T13:55:03.178Z","id":"ATM-TA0006"},{"title":"Abuse UDS for persistence","type":"technique","description":"\n<p>The adversary can attempt to use universal diagnostic services to persist their presence on an ECU. For example, UDS' capabilities for firmware updates, writing to an ECU’s memory by address, and ‘download-and-execute’ can be abused by an adversary to achieve persistence.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.119Z","mitreId":"T0020","technique":[],"updatedAt":"2023-08-09T13:56:07.795Z","id":"ATM-T0020"},{"title":"Capture SMS message","type":"technique","description":"\n<p>A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.</p><p>On Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.</p><p>This technique description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1412/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0035","technique":[],"updatedAt":"2023-08-09T13:56:07.804Z","id":"ATM-T0035"},{"title":"Exploit co located computing device for privilege escalation","type":"technique","description":"\n<p>Adversaries may be able to leverage their access on one of an ECU’s computing devices to gain control of another computing device on the same ECU. For example, it may be possible for a compromised USB controller or Wi-Fi/Bluetooth chip to gain control of the operating system running on a separate chip but still part of the same ECU.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.129Z","mitreId":"T0025","technique":[],"updatedAt":"2023-08-09T13:56:07.825Z","id":"ATM-T0025"},{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","technique":[],"updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"},{"title":"Modify TEE","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the ECU’s Trusted Execution Environment (TEE) or other similar isolated execution environment (TrustZone, SMU, CAAM, SE, TPM, EVITA HSM, SHE, SGX, etc.) where the code can evade detection, may persist after device resets, and may not be removable by the device user. Running code within the TEE may provide an adversary with the ability to monitor or tamper with overall device behavior.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1399/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.147Z","mitreId":"T0023","technique":[],"updatedAt":"2023-08-09T13:56:07.880Z","id":"ATM-T0023"},{"title":"Standard cryptographic protocol","type":"technique","description":"\n<p>Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1573/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.163Z","mitreId":"T0066","technique":[],"updatedAt":"2023-08-09T13:56:07.981Z","id":"ATM-T0066"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The researchers were able to discover information about the system from its files/directories. Notably, they discovered the USB configuration file, some supported adapters were discovered, which led to future exploits using USB. Other examples of reverse engineering and discovery used this technique, as well.","mitreId":" ","technique":[{"title":"File and directory discovery","type":"technique","description":"\n<p>Adversaries may enumerate files and directories or may search in specific locations of an ECU for certain information within a file system. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. <a class=\"external-link\" href=\"http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html\" rel=\"nofollow\"><sup>[1]</sup></a> Custom tools may also be used to gather file and directory information and interact with the Native API.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1083/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0042","updatedAt":"2023-08-09T13:56:07.807Z","id":"ATM-T0042"}],"updatedAt":"2023-08-11T08:13:52.183Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"A hard-coded password was used to secure in-vehicle remote services.","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:52.525Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers gained the ability to send arbitrary CAN messages by re-flashing the board with malicious firmware after reverse engineering the update logic of a component’s firmware","mitreId":" ","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Reprogram co located computing device for privilege escalation","type":"technique","description":"\n<p>The adversary may attempt to elevate privileges by using their access on one of the ECU’s computing devices to reprogram another computing device on the same ECU. For example, if an ECU that uses a system-on-chip for most tasks and a separate microcontroller for communication on the vehicle’s CAN network, an adversary that can execute code on the SoC could attempt to reprogram the CAN microcontroller.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0030","updatedAt":"2023-08-09T13:56:07.926Z","id":"ATM-T0030"}],"updatedAt":"2023-08-11T08:13:53.038Z","id":""},{"title":"Security and Privacy Vulnerabilities of In-Car Wireless Networks: A Tire Pressure Monitoring System Case Study","type":"procedure","description":"Researchers were able to trigger the tire low-pressure warning light in a moving vehicle by spoofing TPMS messages using a custom packet generator and a custom Universal Software Radio Peripheral.","mitreId":" ","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"}],"updatedAt":"2023-12-07T18:27:19.200Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed CAN packets to the Internal Combustion Engine of the Power Management ECU in a Toyota Prius causing it to accelerate the speed","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:12:36.123Z","updatedAt":"2023-12-07T16:12:36.123Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to cause a Toyota Prius' Pre-Collision System to activate the brakes by rapidly send spoofed CAN messages to bypass message confliction.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:57:59.581Z","updatedAt":"2023-12-07T16:57:59.581Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to control the steering wheel at any speed by forcing the Power Steering Control Module (PSCM) into Bootrom, spoofing speed related messaged through the CAN bus, and then sending spoofed Parking Assist Module messages to the PSCM to turn the steering wheel.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"createdAt":"2023-12-07T17:22:46.004Z","updatedAt":"2023-12-07T17:24:09.418Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers bypassed ISO verification process of a Uconnect system of a Jeep Cherokee, execute malicious code, or gain root access by inserting a USB stick with maliciously crafted ISO file. They provided details on modifying the ISO in various ways to achieve any of these specific techniques.","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"},{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"createdAt":"2023-12-07T17:51:55.367Z","updatedAt":"2023-12-07T17:52:33.392Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to negate physical control of the radio knobs of a Jeep Cherokee by killing the exposed D-bus service.","technique":[{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"createdAt":"2023-12-07T17:55:14.855Z","updatedAt":"2023-12-07T17:55:14.855Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The researchers could use CARSHARK to send unintended CAN messages to affect vehicle function via nearly any ECU in the vehicle.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T18:03:59.697Z","updatedAt":"2023-12-07T18:03:59.697Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"CAN is inherently susceptible to DoS attacks, and the researchers highlighted this in their report. With their tools, it would seem trivial to execute one of these attacks to affect vehicle function.","technique":[{"title":"CAN bus denial of service","type":"technique","description":"\n<p>An adversary with access to one of the vehicle’s CAN busses may be able to perform a denial of service attack by flooding the bus with high-priority messages, preventing other ECUs from being able to communicate.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.145Z","mitreId":"T0068","updatedAt":"2023-08-09T13:56:07.873Z","id":"ATM-T0068"}],"createdAt":"2023-12-07T18:04:21.277Z","updatedAt":"2023-12-07T18:04:21.277Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected arbitrary payloads through bluetooth to the telematics system by using a paired Android phone with a malicious Trojan Horse application. They exploited the custom telematics program which had unsafe usages of the strcpy function to the stack when handling a Bluetooth configuration command.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:49:27.887Z","updatedAt":"2023-12-07T18:49:27.887Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"After connecting to the OBD-II port, the researchers determined what ECUs were connected to the internal CAN networks in order to determine where to facilitate different attacks.","technique":[{"title":"System network connections discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</p><p>An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.<a class=\"external-link\" href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://cloud.google.com/vpc/docs/vpc\" rel=\"nofollow\"><sup>[3]</sup></a></p><p>Utilities and commands that acquire this information include netstat, &quot;net use,&quot; and &quot;net session&quot; with Net. In Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to &quot;net session&quot;.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1049/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0049","updatedAt":"2023-08-09T13:56:07.944Z","id":"ATM-T0049"}],"createdAt":"2023-12-07T18:02:06.881Z","updatedAt":"2023-12-07T18:02:06.881Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"To be able to execute their attacks, the researchers moved laterally through the internal CAN networks of the vehicle. This included transitioning between the low and high-speed networks for accessing different ECUs.","technique":[{"title":"Bridge vehicle networks","type":"technique","description":"\n<p>The adversary may seek to bridge vehicle vehicle networks to obtain their objectives.</p><p>Some ECUs may possess multiple interfaces to the vehicle network, including interfaces that use different networking technologies, and an adversary could modify these ECUs to bridge networks that would otherwise be separated.</p><p>For example, an adversary that has gained initial access on an ECU with a connection to a vehicle’s Ethernet network may attempt to modify an ECU that is connected to the vehicle’s Ethernet and CAN networks so that they can extend their reach to ECU on the vehicle’s CAN network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.132Z","mitreId":"T0051","updatedAt":"2023-08-09T13:56:07.835Z","id":"ATM-T0051"}],"createdAt":"2023-12-07T18:02:24.802Z","updatedAt":"2023-12-07T18:02:24.802Z"},{"type":"procedure","title":"Security and Privacy Vulnerabilities of In-Car Wireless Networks: A Tire Pressure Monitoring System Case Study","description":"Researchers extracted Tire Pressure Monitoring System (TPMS) timing information between activation signals and sensor responses by using various TPM sensors and radio data capturing equipment. Researchers were able to monitor the TPMS channel by using a custom eavesdropper to record radio waves and custom Matlab decoders to extract the pressure, temperature, and sensor ID of high energy packets.","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T18:20:21.275Z","updatedAt":"2023-12-07T18:20:21.275Z"},{"title":"Initial access","type":"tactic","description":"\n<p> Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0027/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>The adversary is trying to get into the vehicle network.</p><p>The initial access tactic represents the vectors adversaries use to gain an initial foothold onto a vehicle.","createdAt":"2023-08-09T09:51:19.108Z","mitreId":"TA0002","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Browser compromise","type":"technique","description":"\n<p>Based on <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1456/\" rel=\"nofollow\">MITRE ATT&amp;CK’s ‘Drive-by Compromise’ technique</a>, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability.","createdAt":"2023-08-09T09:51:19.127Z","mitreId":"T0011","updatedAt":"2023-08-09T13:56:07.918Z","id":"ATM-T0011"},{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"},{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"},{"title":"Malicious app","type":"technique","description":"\n<p>Malicious applications could be used by adversaries to gain a presence on a vehicle.</p><p>Some vehicles are configured to allow application installation only from an authorized app store, and an adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.</p><p>App stores typically require developer registration and use vetting techniques to identify malicious applications, which adversaries may seek to circumvent by downloading new code at runtime or by using obfuscation techniques.</p><p>Adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. <a class=\"external-link\" href=\"http://dl.acm.org/citation.cfm?id=2592796\" rel=\"nofollow\"><sup>[1]</sup></a> <a class=\"external-link\" href=\"https://jon.oberheide.org/files/summercon12-bouncer.pdf\" rel=\"nofollow\"><sup>[2]</sup></a> <a class=\"external-link\" href=\"https://media.blackhat.com/bh-us-12/Briefings/Percoco/BH_US_12_Percoco_Adventures_in_Bouncerland_WP.pdf\" rel=\"nofollow\"><sup>[3]</sup></a> <a class=\"external-link\" href=\"https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei\" rel=\"nofollow\"><sup>[4]</sup></a></p><p>Adversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. <a class=\"external-link\" href=\"https://jon.oberheide.org/files/summercon12-bouncer.pdf\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>Adversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. <a class=\"external-link\" href=\"https://jon.oberheide.org/blog/2010/06/25/remote-kill-and-install-on-google-android/\" rel=\"nofollow\"><sup>[5]</sup></a> <a class=\"external-link\" href=\"http://www.vvdveen.com/publications/BAndroid.pdf\" rel=\"nofollow\"><sup>[6]</sup></a> (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)</p><p>This ‘Malicious app’ technique also includes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or the OEM’s app store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.</p><p>Delivery methods for the malicious application include spearphishing attachments, spearphishing links, and third party app stores (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.<a class=\"external-link\" href=\"https://www.ibtimes.co.uk/danger-lurks-third-party-android-app-stores-1544861\" rel=\"nofollow\"><sup>[7]</sup></a><a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/user-beware-rooting-malware-found-in-3rd-party-app-stores/\" rel=\"nofollow\"><sup>[8]</sup></a><a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/flappy-bird-and-third-party-app-stores/\" rel=\"nofollow\"><sup>[9]</sup></a></p><p>Some Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.<a class=\"external-link\" href=\"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\" rel=\"nofollow\"><sup>[10]</sup></a></p><p>Finally, this technique also includes situations where an adversary develops and distributes malware that masquerades as as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.</p><p>Embedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.<a class=\"external-link\" href=\"http://ieeexplore.ieee.org/document/6234407\" rel=\"nofollow\"><sup>[11]</sup></a> The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.</p><p>Pretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.<a class=\"external-link\" href=\"https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/\" rel=\"nofollow\"><sup>[12]</sup></a></p><p>Malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.</p><p>This technique is a combination of three techniques described in the MITRE ATT&amp;CK matrix for mobile devices: <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1475/\" rel=\"nofollow\">Deliver Malicious App via Authorized App Store</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1476/\" rel=\"nofollow\">Deliver Malicious App via Other Means</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1444/\" rel=\"nofollow\">Masquerade as Legitimate Application</a>.","createdAt":"2023-08-09T09:51:19.154Z","mitreId":"T0014","updatedAt":"2023-08-09T13:56:07.897Z","id":"ATM-T0014"},{"title":"Phishing","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1566/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>“Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.</p><p>Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.”</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.159Z","mitreId":"T0015","updatedAt":"2023-08-07T13:56:07.909Z","id":"ATM-T0015"},{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"},{"title":"Supply chain compromise","type":"technique","description":"\n<p>Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.</p><p>Supply chain compromise can take place at any stage of the supply chain including:</p><ul><li><p>Manipulation of development tools</p></li><li><p>Manipulation of a development environment</p></li><li><p>Manipulation of source code repositories (public or private)</p></li><li><p>Manipulation of source code in open-source dependencies</p></li><li><p>Manipulation of software update/distribution mechanisms</p></li><li><p>Compromised/infected system images (multiple cases of removable media infected at the factory) </p></li><li><p>Replacement of legitimate software with modified versions</p></li><li><p>Sales of modified/counterfeit products to legitimate distributors</p></li><li><p>Shipment interdiction</p></li></ul><p>While supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.  Targeting may be specific to a desired victim set  or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. </p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1195/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.169Z","mitreId":"T0017","updatedAt":"2023-08-09T13:56:07.940Z","id":"ATM-T0017"}],"updatedAt":"2023-08-09T13:55:03.241Z","id":"ATM-TA0002"},{"title":"Abuse UDS for collection","type":"technique","description":"\n<p>The adversary can attempt to abuse UDS ‘read’ capabilities, such as ‘read memory by address’ to access customer information from an ECU’s storage or memory.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.125Z","mitreId":"T0055","technique":[],"updatedAt":"2023-08-09T13:56:07.813Z","id":"ATM-T0055"},{"title":"Bypass mandatory access control","type":"technique","description":"\n<p>Adversaries may find ways to defeat mandatory access control mechanisms such as SELinux or AppArmor. This could include finding a ‘hole’ in the policy, or exploiting a vulnerability in the operating system, kernel, or trusted execution environment that allows the adversary to disable mandatory access control.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0034","technique":[],"updatedAt":"2023-08-09T13:56:07.882Z","id":"ATM-T0034"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","technique":[],"updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"},{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","technique":[],"updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"},{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","technique":[],"updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"AppArmor mandatory access control is bypassed.","mitreId":"T0034","technique":[{"title":"Bypass mandatory access control","type":"technique","description":"\n<p>Adversaries may find ways to defeat mandatory access control mechanisms such as SELinux or AppArmor. This could include finding a ‘hole’ in the policy, or exploiting a vulnerability in the operating system, kernel, or trusted execution environment that allows the adversary to disable mandatory access control.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0034","updatedAt":"2023-08-09T13:56:07.882Z","id":"ATM-T0034"}],"updatedAt":"2023-08-11T08:13:51.732Z","id":"ATM-T0034"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The researchers were able to discover that USB-to-Ethernet had some security issues, “which makes it possible to obtain access to the internal network of the head unit, and then detect many exposed internal services through port scanning.“","mitreId":" ","technique":[{"title":"Network service scanning","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of services running on a vehicle’s ECUs, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1046/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.142Z","mitreId":"T0044","updatedAt":"2023-08-09T13:56:07.862Z","id":"ATM-T0044"}],"updatedAt":"2023-08-11T08:13:52.126Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The researchers can laterally move amongst the different CAN buses of the vehicle freely once root privileges have been acquired.","mitreId":" ","technique":[{"title":"Bridge vehicle networks","type":"technique","description":"\n<p>The adversary may seek to bridge vehicle vehicle networks to obtain their objectives.</p><p>Some ECUs may possess multiple interfaces to the vehicle network, including interfaces that use different networking technologies, and an adversary could modify these ECUs to bridge networks that would otherwise be separated.</p><p>For example, an adversary that has gained initial access on an ECU with a connection to a vehicle’s Ethernet network may attempt to modify an ECU that is connected to the vehicle’s Ethernet and CAN networks so that they can extend their reach to ECU on the vehicle’s CAN network.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.132Z","mitreId":"T0051","updatedAt":"2023-08-09T13:56:07.835Z","id":"ATM-T0051"}],"updatedAt":"2023-08-11T08:13:52.171Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"The Bluetooth functionality can be forced to reboot as a result of an internal mechanism activated by a memory corruption vulnerability.","mitreId":" ","technique":[],"updatedAt":"2023-08-11T08:13:52.275Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to flood replay a diagnostic packet which can kill the engine of Ford Escape at any speed. RoutineControl 4044 service was exploited","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:16:40.666Z","updatedAt":"2023-12-07T16:16:40.666Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers sent diagnostic packets to a Toyota Prious to control turning the headlamps on and off without restrictions.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:36:53.778Z","updatedAt":"2023-12-07T16:36:53.778Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility for an attacker to activate brakes for a Jeep Cherokee by first disabling the Adaptive Cruise Control, Front Facing Camera Module, and Sterring Column Control Module and then replaying the messages to indicate braking.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T17:19:29.574Z","updatedAt":"2023-12-07T17:19:54.928Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility for an attacker to activate brakes for a Jeep Cherokee by putting the Electronic Parking Brake in Bootrom and then replay messages that indicated the emergency parking brake is being engaged.","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T17:21:12.228Z","updatedAt":"2023-12-07T17:25:18.169Z"},{"type":"procedure","title":"Drive it like you hacked it","description":"Researcher was able to remote control various vehicle's door locks, start its engine, and track its location by accessing RemoteLink, a mobile app for users to perform actions to a vehicle, with intercepted login credentials.","technique":[{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"},{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"}],"createdAt":"2023-12-07T17:31:48.810Z","updatedAt":"2023-12-07T17:32:27.816Z"},{"type":"procedure","title":"Driving down the rabbit hole","description":"Researchers were able to track a lost car’s location using the telematics communication they received to their malicious honeypot server.","technique":[{"title":"Location tracking","type":"technique","description":"<p>An adversary could use a malicious or exploited application to surreptitiously track the vehicle’s physical location through use of standard operating system APIs.</p><p>This technique’s description was adapted from <a href=\"https://attack.mitre.org/techniques/T1430/\">MITRE ATT&amp;CK</a>.</p>","createdAt":"2023-08-09T09:51:19.131Z","mitreId":"T0043","updatedAt":"2024-03-19T18:50:19.658Z","id":"ATM-T0043","lastModifiedAt":"2024-03-19T18:50:19.657Z"}],"createdAt":"2023-12-07T17:37:27.150Z","updatedAt":"2023-12-07T17:37:27.150Z"},{"type":"procedure","title":"Driving down the rabbit hole","description":"Researchers were able to obtain the firmware of a telematics control unit by connecting a USB device and injecting malicious payload to exploit a vulnerability in the chip.","technique":[{"title":"Removable media","type":"technique","description":"\n<p>Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1052/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0006","updatedAt":"2023-08-09T13:56:07.893Z","id":"ATM-T0006"}],"createdAt":"2023-12-07T17:38:00.679Z","updatedAt":"2023-12-07T17:38:00.679Z"},{"title":"Command and control","type":"tactic","description":"\n<p>The adversary is trying to communicate with compromised systems to control them.</p><p>Command and Control consists of techniques that adversaries may use to communicate with a compromised vehicle and its systems. Adversaries can attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the vehicle’s connectivity features and its defenses.</p><p>This tactic was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0011/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.115Z","mitreId":"TA0011","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Cellular communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s cellular communication system in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0062","updatedAt":"2023-08-09T13:56:07.839Z","id":"ATM-T0062"},{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"},{"title":"Receive only communication","type":"technique","description":"\n<p>The adversary can use a receive-only communication channel, such as Radio Data System (RDS) or TPMS to send commands to the compromised vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.151Z","mitreId":"T0064","updatedAt":"2023-08-09T13:56:07.892Z","id":"ATM-T0064"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"},{"title":"Standard cryptographic protocol","type":"technique","description":"\n<p>Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1573/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.163Z","mitreId":"T0066","updatedAt":"2023-08-09T13:56:07.981Z","id":"ATM-T0066"}],"updatedAt":"2023-08-09T13:55:03.202Z","id":"ATM-TA0011"},{"title":"File and directory discovery","type":"technique","description":"\n<p>Adversaries may enumerate files and directories or may search in specific locations of an ECU for certain information within a file system. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. <a class=\"external-link\" href=\"http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html\" rel=\"nofollow\"><sup>[1]</sup></a> Custom tools may also be used to gather file and directory information and interact with the Native API.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1083/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0042","technique":[],"updatedAt":"2023-08-09T13:56:07.807Z","id":"ATM-T0042"},{"title":"Relay communications","type":"technique","description":"\n<p>The adversary may be able to relay communications to make a device that the vehicle trusts appear closer to the vehicle than it really is. An example of this technique is the use of a key fob relay attack, which a car thief could use to unlock, start, and drive away with a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0007","technique":[],"updatedAt":"2023-08-09T13:56:07.908Z","id":"ATM-T0007"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","technique":[],"updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"The security researchers defeated UDS security access on the IC ECU by recovering its static UDS security key.","mitreId":"T0033","technique":[{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"}],"updatedAt":"2023-08-11T08:13:52.023Z","id":"ATM-T0033"},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Researchers abused remote services to move laterally from the compromised vehicle gateway to the “APE” device: “The vulnerability we utilized to get root privilege on APE exists in ape-updater, an executable file works for updating the whole APE system. The ape-updater runs with root privilege and opens two TCP ports 25974 and 28496.”","mitreId":" ","technique":[{"title":"Remote services","type":"technique","description":"\n<p>Adversaries may attempt to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1021/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.150Z","mitreId":"T0053","updatedAt":"2023-08-09T13:56:07.889Z","id":"ATM-T0053"}],"updatedAt":"2023-08-11T08:13:52.853Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"The researchers were able to connect to a USB debug interface on one of the ECUs: “We were able to connect to the USB port on the CID’s board and boot the device into an NVIDIA Tegra recovery mode.“","mitreId":" ","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"}],"updatedAt":"2023-08-11T08:13:54.272Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers dumped data from the flash storage by soldering exposed flash memory pins and connecting them to a flash programmer","mitreId":" ","technique":[{"title":"Physical modification","type":"technique","description":"\n<p>The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs.</p><p>Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces.</p><p>Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others.</p><p>To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part).</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.165Z","mitreId":"T0016","updatedAt":"2023-08-09T13:56:07.924Z","id":"ATM-T0016"}],"updatedAt":"2023-08-11T08:13:52.960Z","id":""},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed that for every vehicle they have examined, an attacker can quickly send numerous CAN messages to the speedometer to spoof the actual speed.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:57:48.669Z","updatedAt":"2023-12-07T16:57:48.669Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers were able to cause a Toyota Prius' steering wheel to experience sporadic jerks by flooding the CAN network with spoofed speed packets and exploiting the Intelligence Park Assist System.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:58:54.343Z","updatedAt":"2023-12-07T16:58:54.343Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers discovered the connected ECUs by probing and intercepting the communications of the GSM Modem located in the vehicle, which uses a SIM card, and analyzing the packets.","technique":[{"title":"System network connections discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</p><p>An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.<a class=\"external-link\" href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://cloud.google.com/vpc/docs/vpc\" rel=\"nofollow\"><sup>[3]</sup></a></p><p>Utilities and commands that acquire this information include netstat, &quot;net use,&quot; and &quot;net session&quot; with Net. In Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to &quot;net session&quot;.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1049/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0049","updatedAt":"2023-08-09T13:56:07.944Z","id":"ATM-T0049"},{"title":"Network service scanning","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of services running on a vehicle’s ECUs, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1046/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.142Z","mitreId":"T0044","updatedAt":"2023-08-09T13:56:07.862Z","id":"ATM-T0044"}],"createdAt":"2023-12-07T17:45:01.025Z","updatedAt":"2023-12-07T17:46:17.961Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers were able to obtain update files from the OTA backend by sending spoofed OTA update requests using a dongle.","technique":[{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"},{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"createdAt":"2023-12-07T17:47:43.242Z","updatedAt":"2023-12-07T17:48:08.633Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researcher found that they could communicate with any Jeep Cherokee responding over cellular to any Sprint device to be able to exploit vulnerabilities discussed in the paper, such as all of the D-bus vulnerabilities. Sprint did not block cellular communication traffic between devices on their network. Though the researchers did state they did not exploit non-test vehicles remotely, they confirmed the vehicles were listening to the D-Bus service which was the same in their own environment.","technique":[{"title":"System network configuration discovery","type":"technique","description":"\n<p>Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0099\" rel=\"nofollow\">Arp</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0100\" rel=\"nofollow\">ipconfig</a>/<a class=\"external-link\" href=\"https://attack.mitre.org/software/S0101\" rel=\"nofollow\">ifconfig</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0102\" rel=\"nofollow\">nbtstat</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0103\" rel=\"nofollow\">route</a>.</p><p>Adversaries may use the information from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1016\" rel=\"nofollow\">System Network Configuration Discovery</a> during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.167Z","mitreId":"T0048","updatedAt":"2023-08-09T13:56:07.931Z","id":"ATM-T0048"},{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T17:55:42.099Z","updatedAt":"2023-12-07T17:55:59.407Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to inject malicious firmware update and gain control of a chip of the Uconnect system of a Jeep Cherokee without a USB stick by injecting malicious code over the D-sub service to put system into update mode to run flash malicious firmware.","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"}],"createdAt":"2023-12-07T17:56:39.103Z","updatedAt":"2023-12-08T15:32:31.538Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The telematics module was reprogrammed to allow for bridging of the two networks and thus lateral movement throughout the vehicle’s internal networks.","technique":[{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"}],"createdAt":"2023-12-07T18:02:52.271Z","updatedAt":"2023-12-07T18:02:52.271Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The researchers could modify the firmware of the telematics module to allow attackers to exfiltrate data.","technique":[{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"}],"createdAt":"2023-12-07T18:05:25.231Z","updatedAt":"2023-12-07T18:05:25.231Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected arbitrary CAN packets remotely by reflashing the tire pressure ECU via CAN to detect wireless trigger packets and using a custom packet generator to generate packets that worked with the tire pressure ECU.","technique":[{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"},{"title":"Reprogram ECU for lateral movement","type":"technique","description":"\n<p>The adversary may attempt to move laterally in a vehicle’s network by reprogramming an ECU via its software update mechanisms. This can be successful if an ECU on the vehicle network does not possess a mechanism to verify the authenticity of a software update. Flaws in the verification mechanism, including weak cryptography, coding errors, and the failure to address version rollback attacks, can result in <a href=\"Bypass-code-signing_285147204.html\" data-linked-resource-id=\"285147204\" data-linked-resource-version=\"3\" data-linked-resource-type=\"page\">Bypass code signing</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.156Z","mitreId":"T0054","updatedAt":"2023-08-09T13:56:07.904Z","id":"ATM-T0054"},{"title":"Bypass UDS security access","type":"technique","description":"\n<p>Adversaries may find ways to bypass or defeat the Universal Diagnostic Services “Security Access / mode 0x27” security mechanism. Implementation details for this mechanism are not part of the standard and an adversary could seek to defeat mechanisms that use a common secret value on all devices of a given make and model, static challenge-response mechanisms, mechanisms that use short secrets susceptible to brute forcing, and other approaches including diagnostic session hijacking.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.140Z","mitreId":"T0033","updatedAt":"2023-08-09T13:56:07.857Z","id":"ATM-T0033"},{"title":"Abuse UDS for collection","type":"technique","description":"\n<p>The adversary can attempt to abuse UDS ‘read’ capabilities, such as ‘read memory by address’ to access customer information from an ECU’s storage or memory.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.125Z","mitreId":"T0055","updatedAt":"2023-08-09T13:56:07.813Z","id":"ATM-T0055"}],"createdAt":"2023-12-07T18:55:10.721Z","updatedAt":"2023-12-07T19:00:02.661Z"},{"type":"procedure","title":"IoT backdoors in cars","description":"Researchers were able to spoof GPS coordinates updates by putting a SIM card into a target modem and changing the vehicle’s location through the modem web interface.","technique":[{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"}],"createdAt":"2023-12-07T17:47:29.841Z","updatedAt":"2023-12-07T17:47:29.841Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected pre-programmed CAN messages by installing and executing a malicious binary on the PassThru device which is connected to a vehicle.","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T18:48:42.956Z","updatedAt":"2023-12-07T18:48:56.726Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers injected arbitrary payloads from a compromised ECU that monitored broadcasted tire pressure signals and used them as a trigger.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T18:53:58.646Z","updatedAt":"2023-12-07T18:54:17.124Z"},{"title":"Manipulate environment","type":"tactic","description":"\n<p>The adversary is trying to intercept or manipulate network traffic to or from a vehicle, or manipulate the vehicle’s natural environment to achieve their goal.</p><p>This category refers to network-based techniques that an adversary may be able to use to fulfill their objectives, or to create the conditions necessary to use techniques from the ‘initial access’ tactic. These include techniques to intercept or manipulate network traffic to and from the mobile device.</p><p>This category also includes techniques that involve manipulating the physical environment around a vehicle to confuse its sensors or artificial intelligence processing systems. </p><p>This tactic was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0038/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.107Z","mitreId":"TA0001","technique":[{"title":"Adversarial machine learning","type":"technique","description":"\n<p>As per <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Adversarial_machine_learning\" rel=\"nofollow\">Wikipedia</a>, adversarial machine learning can be defined as a machine learning technique that attempts to fool models by supplying deceptive input. In the context of automotive cybersecurity, the adversary could try to use adversarial machine learning techniques to cause vehicle perception systems to misclassify objects, fail to detect obstacles, misinterpret road signs, respond inappropriately to road conditions, and others.</p><p>For example, it may be possible to create an image that appears as a stop sign to a human but is interpreted by a vehicle’s vision system as a speed limit sign.</p><p>It has been shown that some adversarial machine learning techniques could be used to attack multi-sensor fusion systems and possibly affect the behavior of driver assist or autonomous driving features.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.117Z","mitreId":"T0005","updatedAt":"2023-08-09T13:56:07.819Z","id":"ATM-T0005"},{"title":"Analog sensor attacks","type":"technique","description":"\n<p>The adversary may use analog sensor attacks to disrupt the availability of vehicle’s analog sensors, and possibly control their output. Examples of these techniques include shining a laser into a Lidar receiver, transmitting an interfering radar signal that causes a vehicle to perceive a vehicle or obstacle where there isn’t one, or transmitting inaudible voice commands to a vehicle’s voice assistant.</p><p>One survey paper found that a vehicle’s Lidar, camera, radar, ultrasonic, and magnetic sensors could be jammed, and in some cases their outputs controlled, using analog sensor attack techniques.","createdAt":"2023-08-09T09:51:19.126Z","mitreId":"T0004","updatedAt":"2023-08-09T13:56:07.816Z","id":"ATM-T0004"},{"title":"Downgrade to insecure protocols","type":"technique","description":"\n<p>An adversary could cause the vehicle’s wireless interfaces to use less secure protocols, for example by jamming frequencies used by newer protocols such as LTE and only allowing older protocols such as GSM to communicate. Use of less secure protocols may make communication easier to eavesdrop upon or manipulate.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1466/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.136Z","mitreId":"T0001","updatedAt":"2023-08-09T13:56:07.844Z","id":"ATM-T0001"},{"title":"Jamming or denial of service","type":"technique","description":"\n<p>An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS, key fobs) to prevent the mobile device from communicating.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1464/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0002","updatedAt":"2023-08-09T13:56:07.876Z","id":"ATM-T0002"},{"title":"Manipulate communications","type":"technique","description":"\n<p>If network traffic between the vehicle and a remote server or mobile device is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks <a class=\"external-link\" href=\"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>V2X spoofing, GPS spoofing, etc., can also be considered as another form of manipulate communication.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1463/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.153Z","mitreId":"T0003","updatedAt":"2023-08-09T13:56:07.896Z","id":"ATM-T0003"},{"title":"Relay communications","type":"technique","description":"\n<p>The adversary may be able to relay communications to make a device that the vehicle trusts appear closer to the vehicle than it really is. An example of this technique is the use of a key fob relay attack, which a car thief could use to unlock, start, and drive away with a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0007","updatedAt":"2023-08-09T13:56:07.908Z","id":"ATM-T0007"},{"title":"Rogue cellular base station","type":"technique","description":"\n<p>An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate the vehicle cellular interface’s communication. A compromised cellular femtocell could be used to carry out this technique<a class=\"external-link\" href=\"http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html\" rel=\"nofollow\"><sup>[1]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1467/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.164Z","mitreId":"T0008","updatedAt":"2023-08-09T13:56:07.922Z","id":"ATM-T0008"},{"title":"Rogue Wi-Fi access point","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1465/\" rel=\"nofollow\">MITRE ATT&amp;CK for Mobile</a>:</p><p>An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0009","updatedAt":"2023-08-09T13:56:07.937Z","id":"ATM-T0009"}],"updatedAt":"2023-08-09T13:55:03.206Z","id":"ATM-TA0001"},{"title":"Analog sensor attacks","type":"technique","description":"\n<p>The adversary may use analog sensor attacks to disrupt the availability of vehicle’s analog sensors, and possibly control their output. Examples of these techniques include shining a laser into a Lidar receiver, transmitting an interfering radar signal that causes a vehicle to perceive a vehicle or obstacle where there isn’t one, or transmitting inaudible voice commands to a vehicle’s voice assistant.</p><p>One survey paper found that a vehicle’s Lidar, camera, radar, ultrasonic, and magnetic sensors could be jammed, and in some cases their outputs controlled, using analog sensor attack techniques.","createdAt":"2023-08-09T09:51:19.126Z","mitreId":"T0004","technique":[],"updatedAt":"2023-08-09T13:56:07.816Z","id":"ATM-T0004"},{"title":"Disable firewall","type":"technique","description":"\n<p>Adversaries may disable or modify ECU firewalls in order to bypass controls limiting vehicle network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line.</p><p>Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1562/004/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.130Z","mitreId":"T0032","technique":[],"updatedAt":"2023-08-09T13:56:07.827Z","id":"ATM-T0032"},{"title":"Exploit OS vulnerability","type":"technique","description":"\n<p>A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.</p><p>Adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1404/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.138Z","mitreId":"T0026","technique":[],"updatedAt":"2023-08-09T13:56:07.958Z","id":"ATM-T0026"},{"title":"Input capture","type":"technique","description":"\n<p>Adversaries may capture user input to obtain credentials or other information from the user through various methods.</p><p>Malware may masquerade as a legitimate third-party keyboard to record user keystrokes.<sup><a class=\"external-link\" href=\"https://zeltser.com/third-party-keyboards-security/\" rel=\"nofollow\">[1]</a></sup> On Android, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.</p><p>On Android, malware may abuse accessibility features to record keystrokes by registering an <code>AccessibilityService</code> class, overriding the <code>onAccessibilityEvent</code> method, and listening for the <code>AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED</code> event type. The event object passed into the function will contain the data that the user typed.</p><p>Additional methods of keylogging may be possible if root access is available.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1417/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.141Z","mitreId":"T0036","technique":[],"updatedAt":"2023-08-09T13:56:07.860Z","id":"ATM-T0036"},{"title":"Process discovery","type":"technique","description":"\n<p>Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the vehicle network. Adversaries may use the information from process discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1057/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.149Z","mitreId":"T0045","technique":[],"updatedAt":"2023-08-09T13:56:07.887Z","id":"ATM-T0045"},{"title":"Receive only communication","type":"technique","description":"\n<p>The adversary can use a receive-only communication channel, such as Radio Data System (RDS) or TPMS to send commands to the compromised vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.151Z","mitreId":"T0064","technique":[],"updatedAt":"2023-08-09T13:56:07.892Z","id":"ATM-T0064"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"UDS messages can be sent across CAN buses to control ECUs.\n\n“…it’s easy for us to make the Central Gateway Module transfer controlled diagnostic messages to manipulate ECUs on CAN Buses (e.g. PT-CAN, KCAN, etc..) at most of the time.“","mitreId":" ","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"updatedAt":"2023-08-11T08:13:52.522Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Mandatory access control was bypassed: “In our exploit, we patched aa_g_profile_mode with APPARMOR_COMPLAIN in the kernel to disable AppArmor, we also patched syscall setresuid(), so any process can setresuid() to root.”","mitreId":" ","technique":[{"title":"Bypass mandatory access control","type":"technique","description":"\n<p>Adversaries may find ways to defeat mandatory access control mechanisms such as SELinux or AppArmor. This could include finding a ‘hole’ in the policy, or exploiting a vulnerability in the operating system, kernel, or trusted execution environment that allows the adversary to disable mandatory access control.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.148Z","mitreId":"T0034","updatedAt":"2023-08-09T13:56:07.882Z","id":"ATM-T0034"}],"updatedAt":"2023-08-11T08:13:52.469Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Unsecured login credentials for the IC’s SSH service were discovered on the CID: “The CID contains a DSA key it uses to log into the IC via SSH“","mitreId":" ","technique":[{"title":"Unsecured credentials","type":"technique","description":"\n<p>Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. bash history), operating system or application-specific repositories (e.g. credentials in registry), or other specialized files/artifacts (e.g. Private Keys).</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1552/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.166Z","mitreId":"T0040","updatedAt":"2023-08-09T13:56:07.929Z","id":"ATM-T0040"}],"updatedAt":"2023-08-11T08:13:52.857Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers were able to power off and cause the vehicle to perform various actions during driving after sending vehicle API commands to the gateway: “At low speed (below approximately 5 MPH), the car would immediately apply its brakes and lurch to a stop. At speeds above 5 MPH, the car would effectively shift into neutral and no longer accelerate, without applying the brake. Notably, the driver still retains control over steering and braking of the vehicle at this point.“","mitreId":" ","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-11T08:13:53.027Z","id":""},{"title":"Tencent Keen Security Lab: Experimental Security Assessment on Lexus Cars","type":"procedure","description":"Researchers gained remote code execution by exploiting a vulnerability present during the creation of a Bluetooth connection\n\nThey exploited a heap buffer overflow","mitreId":" ","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"updatedAt":"2023-08-11T08:13:53.019Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to arbitrarily affect the navigation system of Ford Escape, which is responsible for determining where the vehicle is going, by flooding custom CAN packets","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:09:33.366Z","updatedAt":"2023-12-07T16:09:33.366Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed a Lane Keep Assist CAN packet in Toyota Prius to cause the front wheels to turn","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:13:07.587Z","updatedAt":"2023-12-07T16:13:07.587Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers used the Techstream software and a physical J2534 pass-thru device to send data through diagnostics which physically manipulates the vehicle without having to carry out the real-world tasks typically associated with normal operation. For instance, it was possible to test the seat belt pre-collision system without the risk of actually damaging the car.","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:31:57.232Z","updatedAt":"2023-12-07T16:32:33.519Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers used the Ford Integrated Diagnostic Software and various hardware to extract the firmware for various ECUs in a Ford Escape The three ECUs they tested this against were the Smart Junction Box, Powertrain Control Module, and Parking Assist Module","technique":[{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"}],"createdAt":"2023-12-07T16:40:21.912Z","updatedAt":"2023-12-07T16:40:21.912Z"},{"type":"procedure","title":"CAN Message Injection","description":"Researchers discussed the possibility to bypass message confliction and send diagnostic messages at arbitrary vehicle speeds by blocking specific CAN IDs using a custom hardware with physical access.","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"},{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:48:58.627Z","updatedAt":"2023-12-07T16:49:25.653Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to control the heating and air conditioning of a Jeep Cherokee by sending arbitrary commands to the Uconnect system.","technique":[{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"createdAt":"2023-12-07T17:54:26.085Z","updatedAt":"2023-12-07T17:54:26.085Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"The researchers were able to change the head unit's display state by sending arbitrary commands to the Uconnect system of Jeep Cherokee.","technique":[{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"}],"createdAt":"2023-12-07T17:55:02.879Z","updatedAt":"2023-12-07T17:55:02.879Z"},{"title":"Discovery","type":"tactic","description":"\n<p>The adversary is trying to figure out the vehicle environment.</p><p>Discovery consists of techniques an adversary may use to gain knowledge about a vehicle’s systems and its internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective.</p><p>This tactic does not include techniques or other work that is performed during an offline / reverse engineering phase of an attack – this is currently out of scope of the auto threat matrix. In other words, the techniques are listed here if they are part of an active attack, but they are not listed if they only need to be used during a reverse engineering / exploit development phase.</p><p>This tactic was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/tactics/TA0007/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.113Z","mitreId":"TA0008","technique":[{"title":"File and directory discovery","type":"technique","description":"\n<p>Adversaries may enumerate files and directories or may search in specific locations of an ECU for certain information within a file system. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. <a class=\"external-link\" href=\"http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html\" rel=\"nofollow\"><sup>[1]</sup></a> Custom tools may also be used to gather file and directory information and interact with the Native API.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1083/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.124Z","mitreId":"T0042","updatedAt":"2023-08-09T13:56:07.807Z","id":"ATM-T0042"},{"title":"Location tracking","type":"technique","description":"<p>An adversary could use a malicious or exploited application to surreptitiously track the vehicle’s physical location through use of standard operating system APIs.</p><p>This technique’s description was adapted from <a href=\"https://attack.mitre.org/techniques/T1430/\">MITRE ATT&amp;CK</a>.</p>","createdAt":"2023-08-09T09:51:19.131Z","mitreId":"T0043","updatedAt":"2024-03-19T18:50:19.658Z","id":"ATM-T0043","lastModifiedAt":"2024-03-19T18:50:19.657Z"},{"title":"Network service scanning","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of services running on a vehicle’s ECUs, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1046/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.142Z","mitreId":"T0044","updatedAt":"2023-08-09T13:56:07.862Z","id":"ATM-T0044"},{"title":"Process discovery","type":"technique","description":"\n<p>Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the vehicle network. Adversaries may use the information from process discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1057/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.149Z","mitreId":"T0045","updatedAt":"2023-08-09T13:56:07.887Z","id":"ATM-T0045"},{"title":"Software discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of software and software versions that are installed on a vehicle. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to exploitation for privilege escalation.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1518/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0046","updatedAt":"2023-08-09T13:56:07.903Z","id":"ATM-T0046"},{"title":"System information discovery","type":"technique","description":"\n<p>An adversary may attempt to get detailed information about the ECU’s operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from this technique during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1082/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.161Z","mitreId":"T0047","updatedAt":"2023-08-09T13:56:07.916Z","id":"ATM-T0047"},{"title":"System network configuration discovery","type":"technique","description":"\n<p>Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0099\" rel=\"nofollow\">Arp</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0100\" rel=\"nofollow\">ipconfig</a>/<a class=\"external-link\" href=\"https://attack.mitre.org/software/S0101\" rel=\"nofollow\">ifconfig</a>, <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0102\" rel=\"nofollow\">nbtstat</a>, and <a class=\"external-link\" href=\"https://attack.mitre.org/software/S0103\" rel=\"nofollow\">route</a>.</p><p>Adversaries may use the information from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1016\" rel=\"nofollow\">System Network Configuration Discovery</a> during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.167Z","mitreId":"T0048","updatedAt":"2023-08-09T13:56:07.931Z","id":"ATM-T0048"},{"title":"System network connections discovery","type":"technique","description":"\n<p>Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</p><p>An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.<a class=\"external-link\" href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://cloud.google.com/vpc/docs/vpc\" rel=\"nofollow\"><sup>[3]</sup></a></p><p>Utilities and commands that acquire this information include netstat, &quot;net use,&quot; and &quot;net session&quot; with Net. In Linux, netstat and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to &quot;net session&quot;.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1049/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.170Z","mitreId":"T0049","updatedAt":"2023-08-09T13:56:07.944Z","id":"ATM-T0049"}],"updatedAt":"2023-08-09T13:55:03.193Z","id":"ATM-TA0008"},{"title":"Affect vehicle function","type":"tactic","description":"\n<p>The adversary is trying to affect vehicle functions and systems, such as propulsion control, airbag deployment, audio, and displays.","createdAt":"2023-08-09T09:51:19.116Z","mitreId":"TA0013","technique":[{"title":"Adversarial machine learning","type":"technique","description":"\n<p>As per <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Adversarial_machine_learning\" rel=\"nofollow\">Wikipedia</a>, adversarial machine learning can be defined as a machine learning technique that attempts to fool models by supplying deceptive input. In the context of automotive cybersecurity, the adversary could try to use adversarial machine learning techniques to cause vehicle perception systems to misclassify objects, fail to detect obstacles, misinterpret road signs, respond inappropriately to road conditions, and others.</p><p>For example, it may be possible to create an image that appears as a stop sign to a human but is interpreted by a vehicle’s vision system as a speed limit sign.</p><p>It has been shown that some adversarial machine learning techniques could be used to attack multi-sensor fusion systems and possibly affect the behavior of driver assist or autonomous driving features.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.117Z","mitreId":"T0005","updatedAt":"2023-08-09T13:56:07.819Z","id":"ATM-T0005"},{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"},{"title":"CAN bus denial of service","type":"technique","description":"\n<p>An adversary with access to one of the vehicle’s CAN busses may be able to perform a denial of service attack by flooding the bus with high-priority messages, preventing other ECUs from being able to communicate.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.145Z","mitreId":"T0068","updatedAt":"2023-08-09T13:56:07.873Z","id":"ATM-T0068"},{"title":"Denial of service","type":"technique","description":"\n<p>Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Vulnerabilities that cause processes to crash can result in a denial of service.</p><p>Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.</p><p>This technique was adopted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T0814/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0072","updatedAt":"2023-08-09T13:56:07.895Z","id":"ATM-T0072"},{"title":"Local function","type":"technique","description":"\n<p>Once the adversary has gained some level of access to an ECU they will have partial or complete control of the functions actuated by that device. For example, an adversary that can execute arbitrary code on a body controller ECU will likely be able to exercise door lock / unlock functions.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.158Z","mitreId":"T0069","updatedAt":"2023-08-09T13:56:07.906Z","id":"ATM-T0069"},{"title":"Modify bus message","type":"technique","description":"\n<p>An adversary that has gained access to one of the vehicle’s communication busses may try to modify or suppress messages sent by another ECU on that network. This technique particularly applicable to CAN busses, but is not necessarily limited to that technology.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.163Z","mitreId":"T0070","updatedAt":"2023-08-09T13:56:07.921Z","id":"ATM-T0070"},{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"updatedAt":"2023-08-09T13:55:03.209Z","id":"ATM-TA0013"},{"title":"Aftermarket, customer, or dealer equipment","type":"technique","description":"\n<p>Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port.</p><p>These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0010","technique":[],"updatedAt":"2023-08-09T13:56:07.868Z","id":"ATM-T0010"},{"title":"URI Hijacking","type":"technique","description":"\n<p>Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.</p><p>Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.<a class=\"external-link\" href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/ios-url-scheme-susceptible-to-hijacking/\" rel=\"nofollow\"><sup>[1]</sup></a><a class=\"external-link\" href=\"https://tools.ietf.org/html/rfc7636\" rel=\"nofollow\"><sup>[2]</sup></a></p><p>This technique description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1416/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.169Z","mitreId":"T0041","technique":[],"updatedAt":"2023-08-09T13:56:07.943Z","id":"ATM-T0041"},{"title":"Free-fall: Hacking Tesla from wireless to CAN bus","type":"procedure","description":"Phishing techniques could be used to gain initial access:\n\n“…when in cellular mode we believe that phishing and user mistyping can also lead to remotely triggering our browser vulnerabilities if we build enough crafted domains.”","mitreId":"T0015","technique":[{"title":"Phishing","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1566/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>“Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.</p><p>Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.”</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.159Z","mitreId":"T0015","updatedAt":"2023-08-07T13:56:07.909Z","id":"ATM-T0015"}],"updatedAt":"2023-08-11T08:13:51.576Z","id":"ATM-T0015"},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"A USB dongle can be used to exploit vulnerabilities in USB-to-Ethernet and firmware update features, allowing for initial access.\n\n(CVE-2018-9312, CVE-2018-9320, CVE-2018-9322)","mitreId":" ","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"}],"updatedAt":"2023-08-11T08:13:51.949Z","id":""},{"title":"Experimental Security Assessment of BMW Cars: A Summary Report","type":"procedure","description":"By using a rogue cellular base station, or Bluetooth, vulnerabilities in the Telematics Control Unit can be exploited via the use of GSM for initial access.\n\n(CVE-2018-9311, CVE-2018-9313, CVE-2018-9318)","mitreId":" ","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"updatedAt":"2023-08-11T08:13:51.956Z","id":""},{"title":"OVER-THE-AIR: HOW WE REMOTELY COMPROMISED THE GATEWAY, BCM, AND AUTOPILOT ECUS OF TESLA CARS","type":"procedure","description":"Security researchers were able to bypass a code signing mechanism: “This parameter can bypass Tesla’s check and transform new_name to boot.img by FatFs. By using this vulnerability, we bypassed code signing protection and executed our code in the gateway.“","mitreId":" ","technique":[{"title":"Bypass code signing","type":"technique","description":"\n<p>Adversaries may find ways to bypass code signing mechanisms to install unauthorized firmware on the device.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.120Z","mitreId":"T0031","updatedAt":"2023-08-09T13:56:07.802Z","id":"ATM-T0031"}],"updatedAt":"2023-08-11T08:13:52.585Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers retrieved VPN keys from removable memory cards: “One of the memory cards contained a file, carkeys.tar, which included the car’s OpenVPN credentials, specifically an x509 certificate, an RSA private key, and an OpenVPN static key.”","mitreId":" ","technique":[{"title":"Removable media","type":"technique","description":"\n<p>Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1052/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.152Z","mitreId":"T0006","updatedAt":"2023-08-09T13:56:07.893Z","id":"ATM-T0006"}],"updatedAt":"2023-08-11T08:13:52.697Z","id":""},{"title":"Hacking a Tesla Model S: What we found and what we learned","type":"procedure","description":"Researchers downloaded firmware from the firmware server","mitreId":" ","technique":[{"title":"Internet communication","type":"technique","description":"\n<p>The adversary can use a compromised ECU’s internet connection (if available) for command and control and to exfiltrate data.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.144Z","mitreId":"T0063","updatedAt":"2023-08-09T13:56:07.871Z","id":"ATM-T0063"}],"updatedAt":"2023-08-11T08:13:52.861Z","id":""},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers were able to cause a Toyota Prius' Pre-Collision System to activate the brakes by rapidly send spoofed CAN messages to accelerate in cruise control","technique":[{"title":"Unintended vehicle network message","type":"technique","description":"\n<p>The adversary may try to send unintended messages on the in-vehicle network. While this technique is not specific to CAN communications, it often follows a privilege escalation technique that grants the adversary control of an ECU’s CAN communication system.</p><p>Unintended message includes:</p><ul><li><p>Messages that the host is not supposed to send</p></li><li><p>Messages that the host is authorized to send, but at an incorrect time, at the wrong rate, or out of the intended sequence</p></li><li><p>Messages that the host is authorized to send, but with unintended parameters</p></li><li><p>Any messages sent by an unauthenticated host</p></li></ul><p /></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.168Z","mitreId":"T0071","updatedAt":"2023-08-09T13:56:07.932Z","id":"ATM-T0071"}],"createdAt":"2023-12-07T16:12:03.308Z","updatedAt":"2023-12-07T16:12:03.308Z"},{"type":"procedure","title":"Adventures in Automotive Networks and Control Units","description":"Researchers replayed diagnostic test packets without restriction to the Pre-Collision System of a Toyota Prius which pre-tightened the driver and passenger's seatbelts","technique":[{"title":"Abuse UDS for affecting vehicle function","type":"technique","description":"\n<p>The adversary could try to abuse universal diagnostic services to actuate vehicle functions. For example, if an adversary may try to send diagnostic commands to actuate the brakes or control headlamps. Other UDS functions, such as write memory by address, could be abused to modify an ECU’s firmware and affect the functions it actuates.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.135Z","mitreId":"T0067","updatedAt":"2023-08-09T13:56:07.842Z","id":"ATM-T0067"}],"createdAt":"2023-12-07T16:37:31.627Z","updatedAt":"2023-12-07T16:37:31.627Z"},{"type":"procedure","title":"Driving down the rabbit hole","description":"Researchers captured credentials by sniffing connection requests of a telematics application in the vehicle through a malicious honeypot spoofed as the original destination domain.","technique":[{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"createdAt":"2023-12-07T17:37:07.912Z","updatedAt":"2023-12-07T17:37:07.912Z"},{"type":"procedure","title":"Remote Exploitation of an Unaltered Passenger Vehicle","description":"Researchers were able to perform arbitrary shell command injection on the Uconnect system of a Jeep Cherokee by exploiting the exposed D-Bus service, which was designed for inter-process communication.","technique":[{"title":"Command and scripting interpreter","type":"technique","description":"\n<p>From <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>:</p><p>Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities.</p><p>There are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.</p><p>Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.","createdAt":"2023-08-09T09:51:19.118Z","mitreId":"T0018","updatedAt":"2023-08-09T13:56:07.790Z","id":"ATM-T0018"}],"createdAt":"2023-12-07T17:53:23.717Z","updatedAt":"2023-12-07T17:53:23.717Z"},{"type":"procedure","title":"Experimental Security Analysis of a Modern Automobile","description":"The researchers were able to develop “the ability to remotely compromise key ECUs in our car via externally-facing vulnerabilities, amplify the impact of these remote compromises using the results in this paper, and ultimately monitor and control our car remotely over the Internet.“","technique":[{"title":"Short range wireless communication","type":"technique","description":"\n<p>If available, the adversary can use the vehicle’s short range wireless communication capabilities, including Bluetooth and Wi-Fi, in a post-exploitation environment to fulfill their command and control and exfiltration objectives.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.157Z","mitreId":"T0065","updatedAt":"2023-08-09T13:56:07.905Z","id":"ATM-T0065"}],"createdAt":"2023-12-07T18:04:50.473Z","updatedAt":"2023-12-07T18:04:50.473Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers prepared to exploit the media player’s read functions by overwriting function pointers. They developed an in-system debugger to overwrite the function pointers through an unused serial port of the media player.","technique":[{"title":"Exploit via removable media","type":"technique","description":"\n<p>Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1091/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.</p></div>\n</div>\n<div class=\"cell aside\" data-type=\"aside\">\n","createdAt":"2023-08-09T09:51:19.146Z","mitreId":"T0013","updatedAt":"2023-08-09T13:56:07.877Z","id":"ATM-T0013"},{"title":"Modify OS kernel, boot partition, or system partition","type":"technique","description":"\n<p>If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the system partition, operating system kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.</p><p>Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.</p><p>If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code or escalate privileges and then modify the system partition.</p><p>This technique was adapted from MITRE ATT&amp;CK techniques <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1400/\" rel=\"nofollow\">Modify System Partition</a> and <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1398/\" rel=\"nofollow\">Modify OS Kernel or Boot Partition</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0022","updatedAt":"2023-08-09T13:56:07.850Z","id":"ATM-T0022"}],"createdAt":"2023-12-07T18:40:12.078Z","updatedAt":"2023-12-07T18:40:27.808Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers sniffed the vehicle’s Bluetooth MAC address using the Bluesniff package and a USRP-based software radio. Researchers also were able to obtain the MAC address by sniffing the Bluetooth traffic when a previous device was paired to the vehicle.","technique":[{"title":"Network sniffing","type":"technique","description":"\n<p>Adversaries may sniff vehicle network traffic to capture information about an environment, including authentication material passed over the vehicle network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless vehicle network connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</p><p>Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.</p><p>Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.</p><p>This technique’s description was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1040/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.155Z","mitreId":"T0038","updatedAt":"2023-08-09T13:56:07.901Z","id":"ATM-T0038"}],"createdAt":"2023-12-07T18:49:48.294Z","updatedAt":"2023-12-07T18:49:48.294Z"},{"type":"procedure","title":"Comprehensive Experimental Analyses of Automotive Attack Surfaces","description":"Researchers were able to have unauthorized communication with the telematics unit by creating a custom aqLink-compatible software modem by reverse engineering the aqLink protocol and telematics proprietary Command protocol.","technique":[{"title":"Exploit via radio interface","type":"technique","description":"\n<p>The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces.</p><h3 id=\"Exploitviaradiointerface-BasebandVulnerabilityExploitation\">Baseband Vulnerability Exploitation</h3><p>A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi<a class=\"external-link\" href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\" rel=\"nofollow\"><sup>[1]</sup></a>, TPMS, DAB, or others to the vehicle could exploit a vulnerability<a class=\"external-link\" href=\"http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/\" rel=\"nofollow\"><sup>[2]</sup></a><a class=\"external-link\" href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\" rel=\"nofollow\"><sup>[3]</sup></a>.</p><h3 id=\"Exploitviaradiointerface-MaliciousSMSMessage\">Malicious SMS Message</h3><p>An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device<a class=\"external-link\" href=\"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\" rel=\"nofollow\"><sup>[4]</sup></a>. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages<a class=\"external-link\" href=\"https://srlabs.de/bites/rooting-sim-cards/\" rel=\"nofollow\"><sup>[5]</sup></a>.</p><p>This technique was adapted from <a class=\"external-link\" href=\"https://attack.mitre.org/techniques/T1477/\" rel=\"nofollow\">MITRE ATT&amp;CK</a>.","createdAt":"2023-08-09T09:51:19.137Z","mitreId":"T0012","updatedAt":"2023-08-09T13:56:07.847Z","id":"ATM-T0012"}],"createdAt":"2023-12-07T18:51:13.085Z","updatedAt":"2023-12-07T18:51:13.085Z"}]